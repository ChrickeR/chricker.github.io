name: Build & Preview/Deploy MkDocs + Log4brains

on:
  push:
    branches: [ master, main ]
  pull_request:
  workflow_dispatch:
    inputs:
      preview_only:
        description: "Build preview only (no deploy to Pages)"
        type: boolean
        default: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

# Adjust these if your structure differs
env:
  ADR_LOCAL_DIR: 'adr'        # folder containing log4brains.config.js (and ADRs)
  L4B_ADR_PATH: 'docs/adr'    # where your ADR *.md live relative to ADR_LOCAL_DIR (use 'content/adr' if you prefer)
  L4B_BASE_PATH: '/adr-l4b/'  # must match where the L4B UI will be served in MkDocs
  PREVIEW_ARTIFACT_NAME: 'log4brains-preview'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # --- Checkout ---------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Log4brains: INIT ------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Init Log4brains (if missing)
        run: |
          set -e
          if [ ! -d "${ADR_LOCAL_DIR}" ]; then
            mkdir -p "${ADR_LOCAL_DIR}"
          fi
          cd "${ADR_LOCAL_DIR}"
          if [ ! -f package.json ]; then
            npm init -y
            npm install --save-dev log4brains@^0.7.0
            # Create default config if missing
            if [ ! -f log4brains.config.js ]; then
              cat > log4brains.config.js <<'JS'
              module.exports = {
                site: {
                  title: "TROi Architecture Decisions",
                  description: "Centralized ADR knowledge with DDD context",
                  author: "TROi",
                  basePath: "/adr-l4b/"
                },
                adr: {
                  path: "docs/adr",
                  defaultStatus: "Accepted"
                }
              };
              JS
            fi
            # Ensure ADR folder exists (no-op if already there)
            mkdir -p docs/adr
            # Seed a sample ADR if none exist (keeps build happy)
            if [ -z "$(ls -A docs/adr 2>/dev/null)" ]; then
              cat > docs/adr/0001-adopt-architecture-as-code.md <<'MD'
              ---
              id: 0001
              title: Adopt Architecture-as-Code
              date: 2025-03-01
              status: Accepted
              tags: [aac]
              ---
              ## Context
              We want traceable decisions in one place.

              ## Decision
              Use ADRs (Architecture Decision Records) with Log4brains.

              ## Consequences
              - Clear decision history
              - Easier onboarding
              MD
            fi
          fi
          # Make sure config reflects env overrides
          # Set basePath
          if grep -q "basePath:" log4brains.config.js; then
            sed -i "s|basePath: \".*\"|basePath: \"${L4B_BASE_PATH}\"|g" log4brains.config.js
          fi
          # Set ADR path ('docs/adr' or 'content/adr')
          if grep -q "path:" log4brains.config.js; then
            sed -i "s|path: \".*\"|path: \"${L4B_ADR_PATH}\"|g" log4brains.config.js
          fi
          echo "== log4brains.config.js =="
          sed -n '1,120p' log4brains.config.js

      # --- Log4brains: INSTALL ---------------------------------------
      - name: Install Log4brains dependencies
        working-directory: ${{ env.ADR_LOCAL_DIR }}
        run: |
          npm ci || npm install
          echo "package.json:" && cat package.json

      # --- Log4brains: BUILD -----------------------------------------
      - name: Build Log4brains site
        working-directory: ${{ env.ADR_LOCAL_DIR }}
        run: |
          npx log4brains build
          echo "Built L4B to $(pwd)/site"
          ls -la site || true

      # --- Log4brains: PREVIEW (artifact you can download) -----------
      - name: Upload Log4brains preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PREVIEW_ARTIFACT_NAME }}
          path: ${{ env.ADR_LOCAL_DIR }}/site
          if-no-files-found: warn

      # --- Embed L4B into MkDocs -------------------------------------
      - name: Embed Log4brains output into MkDocs (docs/adr-l4b)
        run: |
          rm -rf docs/adr-l4b
          mkdir -p docs/adr-l4b
          if [ -d "${ADR_LOCAL_DIR}/site" ]; then
            cp -r "${ADR_LOCAL_DIR}/site/"* docs/adr-l4b/
            echo "Embedded files:"
            ls -la docs/adr-l4b | head -n 40
          else
            echo "No L4B site found; writing placeholder."
            printf '<!doctype html><meta charset="utf-8"><title>ADR (Log4brains)</title><body style="font:16px system-ui;padding:24px">ADR site will appear here after build.</body>' > docs/adr-l4b/index.html
          fi

      # --- MkDocs: BUILD ---------------------------------------------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs dependencies
        run: |
          pip install "mkdocs>=1.5" "mkdocs-material>=9.5"

      - name: Build MkDocs site
        run: |
          echo "== mkdocs.yml (head) =="
          sed -n '1,120p' mkdocs.yml
          mkdocs build --clean --verbose
          echo "== built site/ =="
          ls -la site | head -n 50

      # --- PREVIEW (whole site) for PR/manual ------------------------
      - name: Upload MkDocs preview artifact
        if: github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && inputs.preview_only == 'true')
        uses: actions/upload-artifact@v4
        with:
          name: mkdocs-preview
          path: site

      # --- DEPLOY to Pages on push to main/master --------------------
      - name: Upload artifact to Pages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
