name: Deploy MkDocs (+ Log4brains ADRs)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  ADR_LOCAL_DIR: adr
  L4B_BASE_PATH: /adr-l4b   # no trailing slash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # -----------------------------------------------------------------------
      # Checkout
      # -----------------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------------------------------------------
      # (Optional) Log4brains install & build if adr/ exists
      # -----------------------------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Log4brains (if adr/ exists)
        run: |
          if [ -d "${ADR_LOCAL_DIR}" ]; then
            echo "Installing Log4brains in ${ADR_LOCAL_DIR}"
            cd "${ADR_LOCAL_DIR}"
            npm pkg set private=false >/dev/null 2>&1 || true
            npm install --save-dev log4brains@latest
          else
            echo "No ${ADR_LOCAL_DIR}/ directory found; skipping L4B install."
          fi

      - name: Build Log4brains (if adr/ exists)
        run: |
          if [ -d "${ADR_LOCAL_DIR}" ]; then
            echo "Building Log4brains with basePath=${L4B_BASE_PATH}"
            cd "${ADR_LOCAL_DIR}"
            npx -y log4brains@latest build --basePath "${L4B_BASE_PATH}" || echo "⚠️ L4B build failed or produced no output."
            echo "Listing possible outputs:"
            ls -la .log4brains/out 2>/dev/null || echo "no .log4brains/out"
            ls -la site 2>/dev/null || echo "no legacy site"
          else
            echo "No ${ADR_LOCAL_DIR}/ directory found; skipping L4B build."
          fi

      - name: Embed L4B output into MkDocs
        run: |
          mkdir -p docs/adr-l4b
          OUT_V1="${ADR_LOCAL_DIR}/.log4brains/out"
          OUT_LEG="${ADR_LOCAL_DIR}/site"
          if [ -d "$OUT_V1" ] && [ "$(ls -A "$OUT_V1" 2>/dev/null)" ]; then
            rm -rf docs/adr-l4b/*
            cp -r "$OUT_V1/"* docs/adr-l4b/
            echo "✅ Embedded Log4brains v1 output."
          elif [ -d "$OUT_LEG" ] && [ "$(ls -A "$OUT_LEG" 2>/dev/null)" ]; then
            rm -rf docs/adr-l4b/*
            cp -r "$OUT_LEG/"* docs/adr-l4b/
            echo "✅ Embedded legacy output."
          else
            echo "<!doctype html><meta charset='utf-8'><title>ADR</title><body style='font:16px system-ui;padding:24px'>ADR site will appear here after a successful Log4brains build.</body>" > docs/adr-l4b/index.html
            echo "ℹ️ Wrote placeholder to docs/adr-l4b/index.html"
          fi
          ls -la docs/adr-l4b | head -n 40

      # -----------------------------------------------------------------------
      # Ensure required docs exist (placeholders for nav targets)
      # -----------------------------------------------------------------------
      - name: Ensure required docs exist (placeholders)
        run: |
          set -e
          mkdir -p docs/blog/posts docs/techradar docs/system_landscape
          # Blog index
          [ -f docs/blog/index.md ] || cat > docs/blog/index.md <<'MD'
          # Blog
          Här listas blogginlägg. (Placeholder.)
          MD
          # Example posts (optional placeholders, only if missing)
          [ -f docs/blog/posts/why-a-blog.md ] || cat > docs/blog/posts/why-a-blog.md <<'MD'
          # Why a Blog
          Placeholder post.
          MD
          [ -f docs/blog/posts/the-it-architect.md ] || cat > docs/blog/posts/the-it-architect.md <<'MD'
          # The IT Architect
          Placeholder post.
          MD
          # Tech Radar index
          [ -f docs/techradar/index.md ] || cat > docs/techradar/index.md <<'MD'
          # Tech Radar
          Översiktssida för Tech Radar. (Placeholder.)
          MD
          # Tech Radar YAML placeholder (if you reference it in nav)
          [ -f docs/techradar/tech-radar.yaml ] || cat > docs/techradar/tech-radar.yaml <<'YML'
          rings: [ADOPT, TRIAL, ASSESS, HOLD]
          quadrants: [Techniques, Tools, Platforms, Languages & Frameworks]
          blips: []
          YML
          # Tech Radar form (HTML) placeholder (if referenced in nav)
          [ -f docs/techradar/techradar_form_security.html ] || cat > docs/techradar/techradar_form_security.html <<'HTML'
          <!doctype html><meta charset="utf-8"><title>Techradar Form</title>
          <body style="font:16px system-ui;padding:24px">Formulär kommer här. (Placeholder.)</body>
          HTML
          # System landscape page
          [ -f docs/system_landscape/system-landscape.md ] || cat > docs/system_landscape/system-landscape.md <<'MD'
          # System Landscape (Conceptual)
          Diagram kommer här. (Placeholder.)
          MD
          # About page
          [ -f docs/about.md ] || echo -e "# About\nThis is TROi (placeholder)." > docs/about.md
          # ADR index (if you link to it in nav)
          mkdir -p docs/adr
          [ -f docs/adr/index.md ] || cat > docs/adr/index.md <<'MD'
          # Architecture Decision Records (ADR)
          Centralized, version-controlled records for significant architectural decisions.
          - [View with Log4brains layout](/adr-l4b/)
          MD

      # -----------------------------------------------------------------------
      # MkDocs build & upload artifact
      # -----------------------------------------------------------------------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs dependencies
        run: |
          pip install "mkdocs>=1.5" "mkdocs-material>=9.5" mkdocs-git-revision-date-localized-plugin
          mkdocs --version

      - name: Build MkDocs site
        run: |
          mkdocs build --clean --verbose
          echo "✅ MkDocs build complete."
          ls -la site | head -n 50

      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
