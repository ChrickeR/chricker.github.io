name: Deploy MkDocs to GitHub Pages (robust)

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  SKIP_L4B: 'false'                 # set to 'true' to always skip Log4brains
  ADR_LOCAL_DIR: 'adr-overlay'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout MkDocs source
        uses: actions/checkout@v4

      - name: Safety | ensure basic docs + CSS exist
        run: |
          ensure() { mkdir -p "$(dirname "$1")"; [ -f "$1" ] || printf "# %s\n\n_TODO_\n" "$1" > "$1"; }
          ensure docs/index.md
          ensure docs/services/index.md
          ensure docs/products/architecture-as-code/index.md
          ensure docs/products/architecture-as-code/adr/index.md
          ensure docs/products/architecture-as-code/adr/log4brains.md
          ensure docs/products/architecture-as-code/tech-radar/index.md
          ensure docs/products/target-architecture/index.md
          ensure docs/blog/index.md
          ensure docs/profile/index.md
          ensure docs/contact/index.md
          mkdir -p docs/css
          [ -f docs/css/overrides.css ] || echo "/* placeholder */" > docs/css/overrides.css

      # ---------- Log4brains (safe & optional) ----------
      - name: Try checkout ADR repository
        if: ${{ env.SKIP_L4B != 'true' }}
        id: checkout_adr
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ env.ADR_REPOSITORY }}
          path: adr-src
          # token: ${{ secrets.ADR_REPO_TOKEN }} # needed only if ADR repo is private

      - name: Detect ADR repo presence
        if: ${{ env.SKIP_L4B != 'true' }}
        run: |
          if [ ! -d "adr-src" ]; then
            echo "ADR_REPO_MISSING=true" >> $GITHUB_ENV
            echo "⚠️ ADR repo not found (${ADR_REPOSITORY}). Skipping Log4brains."
          else
            echo "ADR_REPO_MISSING=false" >> $GITHUB_ENV
          fi

      - name: Setup Node.js
        if: ${{ env.SKIP_L4B != 'true' && env.ADR_REPO_MISSING != 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Prepare Log4brains project
        if: ${{ env.SKIP_L4B != 'true' && env.ADR_REPO_MISSING != 'true' }}
        working-directory: adr-src
        run: |
          if [ ! -f package.json ]; then
            echo "Initializing Log4brains project (no package.json found)..."
            npm init -y
            npm install log4brains --save-dev
            npx log4brains init || true
          fi

      - name: Build Log4brains (safe)
        if: ${{ env.SKIP_L4B != 'true' && env.ADR_REPO_MISSING != 'true' }}
        working-directory: adr-src
        continue-on-error: true
        run: |
          npx log4brains build || echo "⚠️ Log4brains build failed, continuing without ADR embed"
          ls -la site || echo "No site/ output (will skip embed)"

      - name: Embed Log4brains output into MkDocs
        if: ${{ env.SKIP_L4B != 'true' && env.ADR_REPO_MISSING != 'true' }}
        run: |
          rm -rf docs/adr-l4b
          mkdir -p docs/adr-l4b
          if [ -d "adr-src/site" ]; then
            cp -r adr-src/site/* docs/adr-l4b/
            echo "✅ Embedded Log4brains in docs/adr-l4b/"
          else
            echo "⚠️ Nothing to embed (no adr-src/site)."
          fi
      # ---------------------------------------------------

      # MkDocs build & deploy
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install mkdocs mkdocs-material

      - name: Build MkDocs site
        run: |
          mkdocs build --clean -v
          test -d site || (echo "MkDocs build failed — no site folder" && exit 1)

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
