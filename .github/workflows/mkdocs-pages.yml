name: Deploy MkDocs to GitHub Pages (robust)

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  # Start with Log4brains disabled; switch to 'false' after green build.
  SKIP_L4B: 'true'
  # If ADRs live in this repo, point to that folder ('adr' or 'adr-overlay').
  ADR_LOCAL_DIR: 'adr-overlay'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout MkDocs repo
        uses: actions/checkout@v4

      # Ensure all docs referenced by mkdocs.yml exist + CSS + adr-l4b placeholder
      - name: Safety | Ensure minimal docs + CSS + L4B placeholder
        run: |
          ensure() { mkdir -p "$(dirname "$1")"; [ -f "$1" ] || printf "# %s\n\n_TODO_\n" "$1" > "$1"; }
          ensure docs/index.md
          ensure docs/services/index.md
          ensure docs/products/architecture-as-code/index.md
          ensure docs/products/architecture-as-code/adr/index.md
          ensure docs/products/architecture-as-code/adr/log4brains.md
          ensure docs/products/architecture-as-code/tech-radar/index.md
          ensure docs/products/target-architecture/index.md
          ensure docs/blog/index.md
          ensure docs/profile/index.md
          ensure docs/contact/index.md
          mkdir -p docs/css
          [ -f docs/css/overrides.css ] || echo "/* placeholder */" > docs/css/overrides.css
          mkdir -p docs/adr-l4b
          if [ ! -f docs/adr-l4b/index.html ]; then
            printf '%s\n' \
'<!doctype html>' \
'<html lang="en"><meta charset="utf-8">' \
'<title>ADR (Log4brains)</title>' \
'<body style="font:16px system-ui,-apple-system,Segoe UI,Roboto,Arial;padding:24px;line-height:1.45">' \
'  <h1>ADR (Log4brains)</h1>' \
'  <p>The Log4brains site will appear here after the first successful L4B build.</p>' \
'  <p>If you expected content, try again after Actions finishes.</p>' \
'</body></html>' > docs/adr-l4b/index.html
          fi

      # -------- Optional Log4brains local build (disabled while SKIP_L4B='true') --------
      - name: Detect local ADR folder
        if: ${{ env.SKIP_L4B != 'true' }}
        run: |
          if [ -d "${ADR_LOCAL_DIR}" ]; then
            echo "HAS_LOCAL_ADR=true" >> "$GITHUB_ENV"
            echo "Found ${ADR_LOCAL_DIR}:"
            ls -la "${ADR_LOCAL_DIR}" || true
          else
            echo "HAS_LOCAL_ADR=false" >> "$GITHUB_ENV"
            echo "Local ADR folder '${ADR_LOCAL_DIR}' not found â€” skipping L4B."
          fi

      - name: Setup Node
        if: ${{ env.SKIP_L4B != 'true' && env.HAS_LOCAL_ADR == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Ensure package.json & install
        if: ${{ env.SKIP_L4B != 'true' && env.HAS_LOCAL_ADR == 'true' }}
        working-directory: ${{ env.ADR_LOCAL_DIR }}
        run: |
          if [ ! -f package.json ]; then
            echo '{ "name":"troi-adr","private":true,"devDependencies":{"log4brains":"^0.7.0"},"scripts":{"build":"log4brains build"}}' > package.json
          fi
          npm ci || npm install

      - name: Build Log4brains (non-fatal)
        if: ${{ env.SKIP_L4B != 'true' && env.HAS_LOCAL_ADR == 'true' }}
        working-directory: ${{ env.ADR_LOCAL_DIR }}
        continue-on-error: true
        run: |
          npx log4brains build || echo "L4B build failed, continuing without embed"
          ls -la site || echo "No site/ output from L4B"

      - name: Embed L4B into MkDocs
        if: ${{ env.SKIP_L4B != 'true' && env.HAS_LOCAL_ADR == 'true' }}
        run: |
          if [ -d "${ADR_LOCAL_DIR}/site" ]; then
            rm -rf docs/adr-l4b
            mkdir -p docs/adr-l4b
            cp -r "${ADR_LOCAL_DIR}/site/"* docs/adr-l4b/
            echo "Copied Log4brains site to docs/adr-l4b/"
          else
            echo "Nothing to copy (no ${ADR_LOCAL_DIR}/site)"
          fi
      # -----------------------------------------------------------------------------------

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs deps
        run: pip install mkdocs mkdocs-material

      - name: Build MkDocs
        run: |
          mkdocs build --clean -v
          test -d site || (echo "MkDocs did not produce 'site/'" && exit 1)

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
