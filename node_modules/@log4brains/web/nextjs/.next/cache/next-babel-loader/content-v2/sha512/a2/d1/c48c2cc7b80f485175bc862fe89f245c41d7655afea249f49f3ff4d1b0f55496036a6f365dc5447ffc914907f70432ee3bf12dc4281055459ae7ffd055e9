{"ast":null,"code":"import _EmojiFlags from \"@material-ui/icons/EmojiFlags\";\nimport _CropFree from \"@material-ui/icons/CropFree\";\nimport _defineProperty from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _Tooltip from \"@material-ui/core/Tooltip\";\nimport _Fab from \"@material-ui/core/Fab\";\nimport _Add from \"@material-ui/icons/Add\";\nimport _Dialog from \"@material-ui/core/Dialog\";\nimport _DialogActions from \"@material-ui/core/DialogActions\";\nimport _Button from \"@material-ui/core/Button\";\nimport _DialogContent from \"@material-ui/core/DialogContent\";\nimport _DialogContentText from \"@material-ui/core/DialogContentText\";\nimport _Link from \"@material-ui/core/Link\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _Typography from \"@material-ui/core/Typography\";\nimport _DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Timeline, TimelineConnector, TimelineContent, TimelineDot, TimelineItem, TimelineOppositeContent, TimelineSeparator } from \"@material-ui/lab\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"next/link\";\nimport clsx from \"clsx\";\nimport { Log4brainsMode, Log4brainsModeContext } from \"../../../../contexts\";\nimport { AdrStatusChip } from \"../../../../components\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {},\n    timeline: {\n      padding: 0\n    },\n    adrLink: {\n      display: \"block\"\n    },\n    timelineItem: {\n      \"&:hover\": {\n        \"& $timelineConnector\": {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n    selectedTimelineItem: {\n      \"&:hover\": {\n        \"& $timelineConnector\": {\n          backgroundColor: theme.palette.secondary.main\n        }\n      },\n      \"& $timelineConnector\": {\n        backgroundColor: theme.palette.secondary.main\n      },\n      \"& $adrLink\": {\n        color: theme.palette.secondary.main,\n        \"&:hover\": {\n          color: theme.palette.secondary.main\n        }\n      }\n    },\n    timelineOppositeContentRootAdd: {\n      flex: \"0 0 calc(12ch - 11.5px)\"\n    },\n    timelineOppositeContentRoot: {\n      flex: \"0 0 12ch\"\n    },\n    newAdrFab: {\n      width: 35,\n      height: 35\n    },\n    date: {\n      fontSize: \"0.8rem\",\n      color: theme.palette.grey[500]\n    },\n    adrStatusChip: {\n      marginLeft: \"-1ch\"\n    },\n    icon: {\n      verticalAlign: \"middle\"\n    },\n    adrTitle: {\n      marginRight: \"0.5ch\"\n    },\n    \"package\": {\n      fontSize: \"0.8rem\",\n      verticalAlign: \"text-top\",\n      whiteSpace: \"pre\",\n      color: theme.palette.grey[700]\n    },\n    timelineStartOppositeContentRoot: {\n      flex: \"0 0 calc(12ch - 12px)\"\n    },\n    timelineContentContainer: {\n      paddingBottom: theme.spacing(2)\n    },\n    timelineConnector: {},\n    currentAdrTimelineConnector: {\n      backgroundColor: theme.palette.secondary.main\n    },\n    // TODO: refactor with AdrLink.tsx\n    draftLink: {},\n    proposedLink: {},\n    acceptedLink: {},\n    rejectedLink: {\n      textDecoration: \"line-through\"\n    },\n    deprecatedLink: {\n      textDecoration: \"line-through\"\n    },\n    supersededLink: {\n      textDecoration: \"line-through\"\n    }\n  });\n});\nexport function AdrMenu(_ref) {\n  var adrs = _ref.adrs,\n      currentAdrSlug = _ref.currentAdrSlug,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"adrs\", \"currentAdrSlug\", \"className\"]);\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      newAdrOpen = _React$useState2[0],\n      setNewAdrOpen = _React$useState2[1];\n\n  var mode = React.useContext(Log4brainsModeContext);\n\n  if (adrs === undefined) {\n    return null; // Because inside a <Grow>\n  }\n\n  var lastDateString = \"\";\n  return /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n    className: clsx(className, classes.root)\n  }, props), {}, {\n    children: [mode === Log4brainsMode.preview && /*#__PURE__*/_jsxs(_Dialog, {\n      open: newAdrOpen,\n      onClose: function onClose() {\n        return setNewAdrOpen(false);\n      },\n      \"aria-labelledby\": \"newadr-dialog-title\",\n      \"aria-describedby\": \"newadr-dialog-description\",\n      children: [/*#__PURE__*/_jsx(_DialogTitle, {\n        id: \"newadr-dialog-title\",\n        children: \"Create a new ADR\"\n      }), /*#__PURE__*/_jsx(_DialogContent, {\n        children: /*#__PURE__*/_jsxs(_DialogContentText, {\n          id: \"newadr-dialog-description\",\n          children: [/*#__PURE__*/_jsx(_Typography, {\n            children: \"Run the following command in your terminal:\"\n          }), /*#__PURE__*/_jsx(\"pre\", {\n            children: /*#__PURE__*/_jsx(\"code\", {\n              className: \"hljs bash\",\n              children: \"log4brains adr new\"\n            })\n          }), /*#__PURE__*/_jsxs(_Typography, {\n            children: [\"This will create a new ADR from your template and will open it in your editor.\", /*#__PURE__*/_jsx(\"br\", {}), \"Just press \", /*#__PURE__*/_jsx(\"code\", {\n              children: \"Ctrl+S\"\n            }), \" to watch your changes here, thanks to Hot Reload.\"]\n          }), /*#__PURE__*/_jsxs(_Typography, {\n            variant: \"body2\",\n            style: {\n              marginTop: 20\n            },\n            children: [\"Would you have preferred to create a new ADR directly from here?\", /*#__PURE__*/_jsx(\"br\", {}), \"Leave a \\uD83D\\uDC4D on\", \" \", /*#__PURE__*/_jsx(_Link, {\n              href: \"https://github.com/thomvaill/log4brains/issues/9\",\n              target: \"_blank\",\n              rel: \"noopener\",\n              children: \"this GitHub issue\"\n            }), \" \", \"then!\"]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(_DialogActions, {\n        children: /*#__PURE__*/_jsx(_Button, {\n          onClick: function onClick() {\n            return setNewAdrOpen(false);\n          },\n          color: \"primary\",\n          autoFocus: true,\n          children: \"OK\"\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(Timeline, {\n      className: classes.timeline,\n      children: [mode === Log4brainsMode.preview && /*#__PURE__*/_jsxs(TimelineItem, {\n        className: classes.timelineItem,\n        children: [/*#__PURE__*/_jsx(TimelineOppositeContent, {\n          classes: {\n            root: classes.timelineOppositeContentRootAdd\n          }\n        }), /*#__PURE__*/_jsxs(TimelineSeparator, {\n          children: [/*#__PURE__*/_jsx(_Tooltip, {\n            title: \"Create a new ADR\",\n            children: /*#__PURE__*/_jsx(_Fab, {\n              size: \"small\",\n              color: \"primary\",\n              \"aria-label\": \"create a new ADR\",\n              className: classes.newAdrFab,\n              onClick: function onClick() {\n                return setNewAdrOpen(true);\n              },\n              children: /*#__PURE__*/_jsx(_Add, {})\n            })\n          }), /*#__PURE__*/_jsx(TimelineConnector, {})]\n        }), /*#__PURE__*/_jsx(TimelineContent, {})]\n      }), adrs.map(function (adr) {\n        var currentDateString = moment(adr.publicationDate || adr.creationDate).format(\"MMMM|YYYY\");\n        var dateString = currentDateString === lastDateString ? \"\" : currentDateString;\n        lastDateString = currentDateString;\n\n        var _dateString$split = dateString.split(\"|\"),\n            _dateString$split2 = _slicedToArray(_dateString$split, 2),\n            month = _dateString$split2[0],\n            year = _dateString$split2[1];\n\n        return /*#__PURE__*/_jsxs(TimelineItem, {\n          className: clsx(classes.timelineItem, _defineProperty({}, classes.selectedTimelineItem, currentAdrSlug === adr.slug)),\n          children: [/*#__PURE__*/_jsxs(TimelineOppositeContent, {\n            classes: {\n              root: classes.timelineOppositeContentRoot\n            },\n            children: [/*#__PURE__*/_jsx(_Typography, {\n              variant: \"body2\",\n              className: classes.date,\n              children: month\n            }), /*#__PURE__*/_jsx(_Typography, {\n              variant: \"body2\",\n              className: classes.date,\n              children: year\n            })]\n          }), /*#__PURE__*/_jsxs(TimelineSeparator, {\n            children: [/*#__PURE__*/_jsx(TimelineDot, {\n              className: classes.timelineConnector\n            }), /*#__PURE__*/_jsx(TimelineConnector, {\n              className: classes.timelineConnector\n            })]\n          }), /*#__PURE__*/_jsx(TimelineContent, {\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: classes.timelineContentContainer,\n              children: [/*#__PURE__*/_jsx(Link, {\n                href: \"/adr/\".concat(adr.slug),\n                passHref: true,\n                children: /*#__PURE__*/_jsxs(_Link, {\n                  className: clsx(classes.adrLink, _defineProperty({}, classes[\"\".concat(adr.status, \"Link\")], true)),\n                  variant: \"body2\",\n                  children: [/*#__PURE__*/_jsx(\"span\", {\n                    className: classes.adrTitle,\n                    children: adr.title || \"Untitled\"\n                  }), adr[\"package\"] ? /*#__PURE__*/_jsxs(\"span\", {\n                    className: classes[\"package\"],\n                    children: [/*#__PURE__*/_jsx(_CropFree, {\n                      fontSize: \"inherit\",\n                      className: classes.icon\n                    }), \" \", adr[\"package\"]]\n                  }) : null]\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsx(AdrStatusChip, {\n                  status: adr.status,\n                  className: classes.adrStatusChip\n                })\n              })]\n            })\n          })]\n        }, adr.slug);\n      }), /*#__PURE__*/_jsxs(TimelineItem, {\n        children: [/*#__PURE__*/_jsx(TimelineOppositeContent, {\n          classes: {\n            root: classes.timelineStartOppositeContentRoot\n          }\n        }), /*#__PURE__*/_jsxs(TimelineSeparator, {\n          children: [/*#__PURE__*/_jsx(TimelineConnector, {}), /*#__PURE__*/_jsx(TimelineDot, {\n            children: /*#__PURE__*/_jsx(_EmojiFlags, {})\n          })]\n        }), /*#__PURE__*/_jsx(TimelineContent, {})]\n      })]\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}