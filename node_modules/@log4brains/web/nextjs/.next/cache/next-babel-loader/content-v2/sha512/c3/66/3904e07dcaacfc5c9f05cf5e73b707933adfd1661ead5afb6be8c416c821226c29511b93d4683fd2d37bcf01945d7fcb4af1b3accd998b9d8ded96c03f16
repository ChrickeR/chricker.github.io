{"ast":null,"code":"import Router from \"next/router\";\nimport { Log4brainsMode } from \"../../contexts\";\nimport { Search } from \"../../lib-shared/search\";\n\nfunction isSerializedIndex(obj) {\n  return typeof obj === \"object\" && obj !== null && \"lunr\" in obj && \"adrs\" in obj && Array.isArray(obj.adrs);\n}\n\nexport async function createSearchInstance(mode) {\n  const index = await (await fetch(mode === Log4brainsMode.preview ? `/api/search-index` : `${Router.basePath}/data/${process.env.NEXT_BUILD_ID}/search-index.json`)).json();\n\n  if (!isSerializedIndex(index)) {\n    throw new Error(`Invalid Search SerializedIndex: ${index}`);\n  }\n\n  return Search.createFromSerializedIndex(index);\n}","map":null,"metadata":{},"sourceType":"module"}