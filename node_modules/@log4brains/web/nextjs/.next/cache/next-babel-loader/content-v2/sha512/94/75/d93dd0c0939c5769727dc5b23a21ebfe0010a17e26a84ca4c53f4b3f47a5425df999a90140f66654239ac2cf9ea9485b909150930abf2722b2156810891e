{"ast":null,"code":"import _LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nvar useStyles = makeStyles(function () {\n  return createStyles({\n    root: {\n      top: 0,\n      width: \"100%\",\n      height: 2,\n      position: \"absolute\"\n    }\n  });\n});\nexport function RoutingProgress() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      progress = _React$useState2[0],\n      setProgress = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timer = setInterval(function () {\n      setProgress(function (oldProgress) {\n        if (oldProgress > 99.999) {\n          clearInterval(timer);\n          return 100;\n        }\n\n        return oldProgress + (100 - oldProgress) / 8;\n      });\n    }, 100);\n    return function () {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(_LinearProgress, {\n    color: \"secondary\",\n    variant: progress < 100 ? \"determinate\" : \"indeterminate\",\n    value: progress,\n    className: classes.root\n  });\n}","map":null,"metadata":{},"sourceType":"module"}