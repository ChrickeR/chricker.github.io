{"pageProps":{"projectName":"Log4brains","currentAdr":{"slug":"web/20200927-avoid-react-fc-type","package":"web","title":"Avoid React.FC type","status":"accepted","supersededBy":null,"tags":[],"deciders":[],"body":{"enhancedMdx":"\n- Source: <https://github.com/spotify/backstage/blob/master/docs/architecture-decisions/adr006-avoid-react-fc.md> <!-- TODO: maybe a new feature? -->\n\n## Context\n\nFacebook has removed `React.FC` from their base template for a Typescript\nproject. The reason for this was that it was found to be an unnecessary feature\nwith next to no benefits in combination with a few downsides.\n\nThe main reasons were:\n\n- **children props** were implicitly added\n- **Generic Type** was not supported on children\n\nRead more about the removal in\n[this PR](https://github.com/facebook/create-react-app/pull/8177).\n\n## Decision\n\nTo keep our codebase up to date, we have decided that `React.FC` and `React.SFC`\nshould be avoided in our codebase when adding new code.\n\nHere is an example:\n\n```typescript\n/* Avoid this: */\ntype BadProps = { text: string };\nconst BadComponent: FC<BadProps> = ({ text, children }) => (\n  <div>\n    <div>{text}</div>\n    {children}\n  </div>\n);\n\n/* Do this instead: */\ntype GoodProps = { text: string; children?: React.ReactNode };\nconst GoodComponent = ({ text, children }: GoodProps) => (\n  <div>\n    <div>{text}</div>\n    {children}\n  </div>\n);\n```\n"},"creationDate":"2020-09-25T16:34:23.000Z","lastEditDate":"2020-09-25T16:34:23.000Z","lastEditAuthor":"Thomas Vaillant","publicationDate":"2020-09-27T21:59:59.000Z","file":{"relativePath":"packages/web/docs/adr/20200927-avoid-react-fc-type.md","absolutePath":"/Users/thomas/git/log4brains/packages/web/docs/adr/20200927-avoid-react-fc-type.md"},"repository":{"provider":"github","viewUrl":"https://github.com/thomvaill/log4brains/blob/master/packages/web/docs/adr/20200927-avoid-react-fc-type.md"}},"l4bVersion":"1.1.0"},"__N_SSG":true}