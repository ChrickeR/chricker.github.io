import { ValueObject } from "./ValueObject";
export declare class ValueObjectMap<K extends ValueObject<any>, V> implements Map<K, V> {
    private readonly map;
    constructor(tuples?: [K, V][]);
    private getKeyRef;
    clear(): void;
    delete(key: K): boolean;
    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;
    get(key: K): V | undefined;
    has(key: K): boolean;
    set(key: K, value: V): this;
    get size(): number;
    [Symbol.iterator](): IterableIterator<[K, V]>;
    entries(): IterableIterator<[K, V]>;
    keys(): IterableIterator<K>;
    values(): IterableIterator<V>;
    get [Symbol.toStringTag](): string;
}
//# sourceMappingURL=ValueObjectMap.d.ts.map