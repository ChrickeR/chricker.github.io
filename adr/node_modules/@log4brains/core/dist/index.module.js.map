{"version":3,"file":"index.module.js","sources":["../src/domain/Entity.ts","../src/domain/AggregateRoot.ts","../src/domain/Log4brainsError.ts","../src/domain/ValueObject.ts","../src/domain/ValueObjectArray.ts","../src/adr/domain/AdrSlug.ts","../src/adr/domain/AdrStatus.ts","../src/adr/domain/MarkdownAdrLink.ts","../src/adr/domain/AdrRelation.ts","../src/adr/domain/Author.ts","../src/adr/domain/Adr.ts","../src/adr/domain/AdrFile.ts","../src/adr/domain/PackageRef.ts","../src/adr/domain/AdrTemplate.ts","../src/lib/paths.ts","../src/adr/domain/FilesystemPath.ts","../src/lib/cheerio-markdown/markdown-it-source-map-plugin.ts","../src/lib/cheerio-markdown/CheerioMarkdownElement.ts","../src/lib/cheerio-markdown/cheerioToMarkdown.ts","../src/lib/cheerio-markdown/CheerioMarkdown.ts","../src/adr/domain/MarkdownBody.ts","../src/adr/domain/Package.ts","../src/application/Command.ts","../src/application/Query.ts","../src/adr/application/commands/CreateAdrFromTemplateCommand.ts","../src/adr/application/commands/SupersedeAdrCommand.ts","../src/adr/application/command-handlers/CreateAdrFromTemplateCommandHandler.ts","../src/adr/application/command-handlers/SupersedeAdrCommandHandler.ts","../src/adr/application/queries/GenerateAdrSlugFromTitleCommand.ts","../src/adr/application/queries/GetAdrBySlugQuery.ts","../src/adr/application/queries/SearchAdrsQuery.ts","../src/adr/application/query-handlers/GenerateAdrSlugFromTitleCommandHandler.ts","../src/adr/application/query-handlers/GetAdrBySlugQueryHandler.ts","../src/adr/application/query-handlers/SearchAdrsQueryHandler.ts","../src/adr/infrastructure/MarkdownAdrLinkResolver.ts","../src/adr/infrastructure/repositories/AdrRepository.ts","../src/adr/infrastructure/repositories/AdrTemplateRepository.ts","../src/adr/infrastructure/repositories/PackageRepository.ts","../src/infrastructure/buses/CommandBus.ts","../src/infrastructure/buses/QueryBus.ts","../src/infrastructure/file-watcher/FileWatcher.ts","../src/infrastructure/di/buildContainer.ts","../src/utils.ts","../src/infrastructure/config/schema.ts","../src/infrastructure/config/guessGitRepositoryConfig.ts","../src/infrastructure/config/Log4brainsConfigNotFoundError.ts","../src/infrastructure/config/builders.ts","../src/infrastructure/api/transformers/adr-transformers.ts","../src/infrastructure/api/Log4brains.ts"],"sourcesContent":["export abstract class Entity<T extends Record<string, unknown>> {\n  constructor(public readonly props: T) {}\n\n  public equals(e?: Entity<T>): boolean {\n    return e === this; // One instance allowed per entity\n  }\n}\n","import { Entity } from \"./Entity\";\n\nexport abstract class AggregateRoot<\n  T extends Record<string, unknown>\n> extends Entity<T> {}\n","/**\n * Log4brains Error base class.\n * Any error thrown by the core API extends this class.\n */\nexport class Log4brainsError extends Error {\n  constructor(public readonly name: string, public readonly details?: string) {\n    super(`${name}${details ? ` (${details})` : \"\"}`);\n  }\n}\n","import isEqual from \"lodash/isEqual\";\n\n// Inspired from https://khalilstemmler.com/articles/typescript-value-object/\n// Thank you :-)\n\nexport type ValueObjectProps = Record<string, unknown>;\n\n/**\n * @desc ValueObjects are objects that we determine their\n * equality through their structural property.\n */\nexport abstract class ValueObject<T extends ValueObjectProps> {\n  public readonly props: T;\n\n  constructor(props: T) {\n    this.props = Object.freeze(props);\n  }\n\n  public equals(vo?: ValueObject<T>): boolean {\n    if (vo === null || vo === undefined) {\n      return false;\n    }\n    if (vo.constructor.name !== this.constructor.name) {\n      return false;\n    }\n    if (vo.props === undefined) {\n      return false;\n    }\n    return isEqual(this.props, vo.props);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ValueObject } from \"./ValueObject\";\n\nexport class ValueObjectArray {\n  static inArray<VO extends ValueObject<any>>(\n    object: VO,\n    array: VO[]\n  ): boolean {\n    return array.some((o) => o.equals(object));\n  }\n}\n","import moment from \"moment\";\nimport slugify from \"slugify\";\nimport { Log4brainsError, ValueObject } from \"@src/domain\";\nimport { AdrFile } from \"./AdrFile\";\nimport { PackageRef } from \"./PackageRef\";\n\ntype Props = {\n  value: string;\n};\n\nexport class AdrSlug extends ValueObject<Props> {\n  constructor(value: string) {\n    super({ value });\n\n    if (this.namePart.includes(\"/\")) {\n      throw new Log4brainsError(\n        \"The / character is not allowed in the name part of an ADR slug\",\n        value\n      );\n    }\n  }\n\n  get value(): string {\n    return this.props.value;\n  }\n\n  get packagePart(): string | undefined {\n    const s = this.value.split(\"/\", 2);\n    return s.length >= 2 ? s[0] : undefined;\n  }\n\n  get namePart(): string {\n    const s = this.value.split(\"/\", 2);\n    return s.length >= 2 ? s[1] : s[0];\n  }\n\n  static createFromFile(file: AdrFile, packageRef?: PackageRef): AdrSlug {\n    const localSlug = file.path.basenameWithoutExtension;\n    return new AdrSlug(\n      packageRef ? `${packageRef.name}/${localSlug}` : localSlug\n    );\n  }\n\n  static createFromTitle(\n    title: string,\n    packageRef?: PackageRef,\n    date?: Date\n  ): AdrSlug {\n    const slugifiedTitle = slugify(title, {\n      lower: true,\n      strict: true\n    }).replace(/-*$/, \"\");\n    const localSlug = `${moment(date).format(\"YYYYMMDD\")}-${slugifiedTitle}`;\n    return new AdrSlug(\n      packageRef ? `${packageRef.name}/${localSlug}` : localSlug\n    );\n  }\n}\n","import { Log4brainsError, ValueObject } from \"@src/domain\";\n\ntype Props = {\n  name: string;\n};\n\nexport class AdrStatus extends ValueObject<Props> {\n  static DRAFT = new AdrStatus(\"draft\");\n\n  static PROPOSED = new AdrStatus(\"proposed\");\n\n  static REJECTED = new AdrStatus(\"rejected\");\n\n  static ACCEPTED = new AdrStatus(\"accepted\");\n\n  static DEPRECATED = new AdrStatus(\"deprecated\");\n\n  static SUPERSEDED = new AdrStatus(\"superseded\");\n\n  private constructor(name: string) {\n    super({ name });\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n\n  static createFromName(name: string): AdrStatus {\n    if (name.toLowerCase().startsWith(\"superseded by\")) {\n      return this.SUPERSEDED;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const status = Object.values(AdrStatus)\n      .filter((prop) => {\n        return prop instanceof AdrStatus && prop.name === name.toLowerCase();\n      })\n      .pop();\n    if (!status) {\n      throw new Log4brainsError(\"Unknown ADR status\", name);\n    }\n\n    return status as AdrStatus;\n  }\n}\n","import { Log4brainsError, ValueObject } from \"@src/domain\";\nimport type { Adr } from \"./Adr\";\n\ntype Props = {\n  from: Adr;\n  to: Adr;\n};\n\nexport class MarkdownAdrLink extends ValueObject<Props> {\n  constructor(from: Adr, to: Adr) {\n    super({ from, to });\n  }\n\n  get from(): Adr {\n    return this.props.from;\n  }\n\n  get to(): Adr {\n    return this.props.to;\n  }\n\n  toMarkdown(): string {\n    if (!this.from.file || !this.to.file) {\n      throw new Log4brainsError(\n        \"Impossible to create a link between two unsaved ADRs\",\n        `${this.from.slug.value} -> ${this.to.slug.value}`\n      );\n    }\n    const relativePath = this.from.file.path.relative(this.to.file.path);\n    return `[${this.to.slug.value}](${relativePath})`;\n  }\n}\n","import { ValueObject } from \"@src/domain\";\nimport type { Adr } from \"./Adr\";\nimport { MarkdownAdrLink } from \"./MarkdownAdrLink\";\n\ntype Props = {\n  from: Adr;\n  relation: string;\n  to: Adr;\n};\n\nexport class AdrRelation extends ValueObject<Props> {\n  constructor(from: Adr, relation: string, to: Adr) {\n    super({ from, relation, to });\n  }\n\n  get from(): Adr {\n    return this.props.from;\n  }\n\n  get relation(): string {\n    return this.props.relation;\n  }\n\n  get to(): Adr {\n    return this.props.to;\n  }\n\n  toMarkdown(): string {\n    const link = new MarkdownAdrLink(this.from, this.to);\n    return `${this.relation} ${link.toMarkdown()}`;\n  }\n}\n","import { ValueObject } from \"@src/domain\";\n\ntype Props = {\n  name: string;\n  email?: string;\n};\n\nexport class Author extends ValueObject<Props> {\n  constructor(name: string, email?: string) {\n    super({ name, email });\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n\n  get email(): string | undefined {\n    return this.props.email;\n  }\n\n  static createAnonymous(): Author {\n    return new Author(\"Anonymous\");\n  }\n}\n","import moment from \"moment-timezone\";\nimport { AggregateRoot, Log4brainsError } from \"@src/domain\";\nimport { AdrFile } from \"./AdrFile\";\nimport { AdrSlug } from \"./AdrSlug\";\nimport { AdrStatus } from \"./AdrStatus\";\nimport type { MarkdownBody } from \"./MarkdownBody\";\nimport { PackageRef } from \"./PackageRef\";\nimport { AdrRelation } from \"./AdrRelation\";\nimport { Author } from \"./Author\";\n\n// TODO: make this configurable\nconst dateFormats = [\"YYYY-MM-DD\", \"DD/MM/YYYY\"];\n\ntype WithOptional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\ntype Props = {\n  slug: AdrSlug;\n  package?: PackageRef;\n  body: MarkdownBody;\n  file?: AdrFile; // set by the repository after save()\n  creationDate: Date; // set by the repository after save() or automatically set to now()\n  lastEditDate: Date; // set by the repository after save() or automatically set to now()\n  lastEditAuthor: Author; // set by the repository after save() or automatically set to anonymous\n};\n\nexport class Adr extends AggregateRoot<Props> {\n  /**\n   * Global TimeZone.\n   * This static property must be set at startup with Adr.setTz(), otherwise it will throw an Error.\n   * This dirty behavior is temporary, until we get a better vision on how to deal with timezones in the project.\n   * TODO: refactor\n   */\n  private static tz?: string;\n\n  constructor(\n    props: WithOptional<\n      Props,\n      \"creationDate\" | \"lastEditDate\" | \"lastEditAuthor\"\n    >\n  ) {\n    super({\n      creationDate: props.creationDate || new Date(),\n      lastEditDate: props.lastEditDate || new Date(),\n      lastEditAuthor: props.lastEditAuthor || Author.createAnonymous(),\n      ...props\n    });\n  }\n\n  /**\n   * @see Adr.tz\n   */\n  static setTz(tz: string): void {\n    if (!moment.tz.zone(tz)) {\n      throw new Log4brainsError(\"Unknown timezone\", Adr.tz);\n    }\n    Adr.tz = tz;\n  }\n\n  /**\n   * For test purposes only\n   */\n  static clearTz(): void {\n    Adr.tz = undefined;\n  }\n\n  get slug(): AdrSlug {\n    return this.props.slug;\n  }\n\n  get package(): PackageRef | undefined {\n    return this.props.package;\n  }\n\n  get body(): MarkdownBody {\n    return this.props.body;\n  }\n\n  get file(): AdrFile | undefined {\n    return this.props.file;\n  }\n\n  get creationDate(): Date {\n    return this.props.creationDate;\n  }\n\n  get lastEditDate(): Date {\n    return this.props.lastEditDate;\n  }\n\n  get lastEditAuthor(): Author {\n    return this.props.lastEditAuthor;\n  }\n\n  get title(): string | undefined {\n    return this.body.getFirstH1Title(); // TODO: log when no title\n  }\n\n  get status(): AdrStatus {\n    const statusStr = this.body.getHeaderMetadata(\"Status\");\n    if (!statusStr) {\n      return AdrStatus.ACCEPTED;\n    }\n    try {\n      return AdrStatus.createFromName(statusStr);\n    } catch (e) {\n      return AdrStatus.DRAFT; // TODO: log (DRAFT because usually the help from the template)\n    }\n  }\n\n  get superseder(): AdrSlug | undefined {\n    const statusStr = this.body.getHeaderMetadata(\"Status\");\n    if (!this.status.equals(AdrStatus.SUPERSEDED) || !statusStr) {\n      return undefined;\n    }\n    const slug = statusStr.replace(/superseded\\s*by\\s*:?/i, \"\").trim();\n    try {\n      return slug ? new AdrSlug(slug) : undefined;\n    } catch (e) {\n      return undefined; // TODO: log\n    }\n  }\n\n  get publicationDate(): Date | undefined {\n    if (!Adr.tz) {\n      throw new Log4brainsError(\"Adr.setTz() must be called at startup!\");\n    }\n\n    const dateStr = this.body.getHeaderMetadata(\"date\");\n    if (!dateStr) {\n      return undefined;\n    }\n\n    // We set hours on 23:59:59 local time for sorting reasons:\n    // Because an ADR without a publication date is sorted based on its creationDate.\n    // And usually, ADRs created on the same publicationDate of another ADR are older than this one.\n    // This enables us to have a consistent behavior in sorting.\n    const date = moment.tz(\n      `${dateStr} 23:59:59`,\n      dateFormats.map((format) => `${format} HH:mm:ss`),\n      true,\n      Adr.tz\n    );\n    if (!date.isValid()) {\n      return undefined; // TODO: warning\n    }\n    return date.toDate();\n  }\n\n  get tags(): string[] {\n    const tags = this.body.getHeaderMetadata(\"tags\");\n    if (\n      !tags ||\n      tags.trim() === \"\" ||\n      tags === \"[space and/or comma separated list of tags] <!-- optional -->\"\n    ) {\n      return [];\n    }\n    return tags.split(/\\s*[\\s,]{1}\\s*/).map((tag) => tag.trim().toLowerCase());\n  }\n\n  get deciders(): string[] {\n    const deciders = this.body.getHeaderMetadata(\"deciders\");\n    if (\n      !deciders ||\n      deciders.trim() === \"\" ||\n      deciders === \"[list everyone involved in the decision] <!-- optional -->\"\n    ) {\n      return [];\n    }\n    return deciders.split(/\\s*[,]{1}\\s*/).map((decider) => decider.trim());\n  }\n\n  setFile(file: AdrFile): void {\n    this.props.file = file;\n  }\n\n  setTitle(title: string): void {\n    this.body.setFirstH1Title(title);\n  }\n\n  supersedeBy(superseder: Adr): void {\n    const relation = new AdrRelation(this, \"superseded by\", superseder);\n    this.body.setHeaderMetadata(\"Status\", relation.toMarkdown());\n    superseder.markAsSuperseder(this);\n  }\n\n  private markAsSuperseder(superseded: Adr): void {\n    const relation = new AdrRelation(this, \"Supersedes\", superseded);\n    this.body.addLinkNoDuplicate(relation.toMarkdown());\n  }\n\n  async getEnhancedMdx(): Promise<string> {\n    const bodyCopy = this.body.clone();\n\n    // Remove title\n    bodyCopy.deleteFirstH1Title();\n\n    // Remove header metadata\n    [\"status\", \"deciders\", \"date\", \"tags\"].forEach((metadata) =>\n      bodyCopy.deleteHeaderMetadata(metadata)\n    );\n\n    // Replace links\n    await bodyCopy.replaceAdrLinks(this);\n\n    return bodyCopy.getRawMarkdown();\n  }\n\n  static compare(a: Adr, b: Adr): number {\n    // PublicationDate always wins on creationDate\n    const aDate = a.publicationDate || a.creationDate;\n    const bDate = b.publicationDate || b.creationDate;\n\n    const dateDiff = aDate.getTime() - bDate.getTime();\n    if (dateDiff !== 0) {\n      return dateDiff;\n    }\n\n    // When the dates are equal, we compare the slugs' name parts\n    const aSlugNamePart = a.slug.namePart.toLowerCase();\n    const bSlugNamePart = b.slug.namePart.toLowerCase();\n\n    if (aSlugNamePart === bSlugNamePart) {\n      // Special case: when the name parts are equal, we take the package name into account\n      // This case is very rare but we have to take it into account so that the results are not random\n      return a.slug.value.toLowerCase() < b.slug.value.toLowerCase() ? -1 : 1;\n    }\n\n    return aSlugNamePart < bSlugNamePart ? -1 : 1;\n  }\n}\n","import { Log4brainsError, ValueObject } from \"@src/domain\";\nimport type { AdrSlug } from \"./AdrSlug\";\nimport { FilesystemPath } from \"./FilesystemPath\";\n\ntype Props = {\n  path: FilesystemPath;\n};\n\nconst reservedFilenames = [\n  \"template.md\",\n  \"readme.md\",\n  \"index.md\",\n  \"backlog.md\"\n];\n\nexport class AdrFile extends ValueObject<Props> {\n  constructor(path: FilesystemPath) {\n    super({ path });\n\n    if (path.extension.toLowerCase() !== \".md\") {\n      throw new Log4brainsError(\n        \"Only .md files are supported\",\n        path.pathRelativeToCwd\n      );\n    }\n\n    if (reservedFilenames.includes(path.basename.toLowerCase())) {\n      throw new Log4brainsError(\"Reserved ADR filename\", path.basename);\n    }\n  }\n\n  get path(): FilesystemPath {\n    return this.props.path;\n  }\n\n  static isPathValid(path: FilesystemPath): boolean {\n    try {\n      // eslint-disable-next-line no-new\n      new AdrFile(path);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static createFromSlugInFolder(\n    folder: FilesystemPath,\n    slug: AdrSlug\n  ): AdrFile {\n    return new AdrFile(folder.join(`${slug.namePart}.md`));\n  }\n}\n","import { ValueObject } from \"@src/domain\";\n\ntype Props = {\n  name: string;\n};\n\nexport class PackageRef extends ValueObject<Props> {\n  constructor(name: string) {\n    super({ name });\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n}\n","import { AggregateRoot, Log4brainsError } from \"@src/domain\";\nimport { Adr } from \"./Adr\";\nimport { AdrSlug } from \"./AdrSlug\";\nimport { MarkdownBody } from \"./MarkdownBody\";\nimport { PackageRef } from \"./PackageRef\";\n\ntype Props = {\n  package?: PackageRef;\n  body: MarkdownBody;\n};\n\nexport class AdrTemplate extends AggregateRoot<Props> {\n  get package(): PackageRef | undefined {\n    return this.props.package;\n  }\n\n  get body(): MarkdownBody {\n    return this.props.body;\n  }\n\n  createAdrFromMe(slug: AdrSlug, title: string): Adr {\n    const packageRef = slug.packagePart\n      ? new PackageRef(slug.packagePart)\n      : undefined;\n    if (\n      (!this.package && packageRef) ||\n      (this.package && !this.package.equals(packageRef))\n    ) {\n      throw new Log4brainsError(\n        \"The given slug does not match this template package name\",\n        `slug: ${slug.value} / template package: ${this.package?.name}`\n      );\n    }\n    const adr = new Adr({\n      slug,\n      package: packageRef,\n      body: this.body.clone()\n    });\n    adr.setTitle(title);\n    return adr;\n  }\n}\n","export function forceUnixPath(p: string): string {\n  return p.replace(/\\\\/g, \"/\");\n}\n","import path from \"path\";\nimport { Log4brainsError, ValueObject } from \"@src/domain\";\nimport { forceUnixPath } from \"@src/lib/paths\";\n\ntype Props = {\n  cwdAbsolutePath: string;\n  pathRelativeToCwd: string;\n};\n\nexport class FilesystemPath extends ValueObject<Props> {\n  constructor(cwdAbsolutePath: string, pathRelativeToCwd: string) {\n    super({\n      cwdAbsolutePath: forceUnixPath(cwdAbsolutePath),\n      pathRelativeToCwd: forceUnixPath(pathRelativeToCwd)\n    });\n\n    if (!path.isAbsolute(cwdAbsolutePath)) {\n      throw new Log4brainsError(\"CWD path is not absolute\", cwdAbsolutePath);\n    }\n  }\n\n  get cwdAbsolutePath(): string {\n    return this.props.cwdAbsolutePath;\n  }\n\n  get pathRelativeToCwd(): string {\n    return this.props.pathRelativeToCwd;\n  }\n\n  get absolutePath(): string {\n    return forceUnixPath(\n      path.join(this.props.cwdAbsolutePath, this.pathRelativeToCwd)\n    );\n  }\n\n  get basename(): string {\n    return forceUnixPath(path.basename(this.pathRelativeToCwd));\n  }\n\n  get extension(): string {\n    // with the dot (.)\n    return path.extname(this.pathRelativeToCwd);\n  }\n\n  get basenameWithoutExtension(): string {\n    if (!this.extension) {\n      return this.basename;\n    }\n    return this.basename.substring(\n      0,\n      this.basename.length - this.extension.length\n    );\n  }\n\n  join(p: string): FilesystemPath {\n    return new FilesystemPath(\n      this.cwdAbsolutePath,\n      path.join(this.pathRelativeToCwd, p)\n    );\n  }\n\n  relative(to: FilesystemPath, amIaDirectory = false): string {\n    const from = amIaDirectory\n      ? this.absolutePath\n      : path.dirname(this.absolutePath);\n    return forceUnixPath(path.relative(from, to.absolutePath));\n  }\n\n  public equals(vo?: ValueObject<Props>): boolean {\n    // We redefine ValueObject's equals() method to test only the computed absolutePath\n    // because in some the pathRelativeToCwd can be different but targets the same location\n    if (vo === null || vo === undefined || !(vo instanceof FilesystemPath)) {\n      return false;\n    }\n    return this.absolutePath === vo.absolutePath;\n  }\n}\n","/* eslint-disable func-names */\n/* eslint-disable no-param-reassign */\nimport MarkdownIt from \"markdown-it\";\n\n// Source: https://github.com/tylingsoft/markdown-it-source-map\n// Thanks! ;)\n// Had to fork it to add additional information\n\nexport function markdownItSourceMap(md: MarkdownIt): void {\n  const defaultRenderToken = md.renderer.renderToken.bind(md.renderer);\n  md.renderer.renderToken = function (tokens, idx, options) {\n    const token = tokens[idx];\n    if (token.type.endsWith(\"_open\")) {\n      if (token.map) {\n        token.attrPush([\"data-source-line-start\", token.map[0].toString()]);\n        token.attrPush([\"data-source-line-end\", token.map[1].toString()]);\n      }\n      if (token.markup !== undefined) {\n        token.attrPush([\"data-source-markup\", token.markup]);\n      }\n      if (token.level !== undefined) {\n        token.attrPush([\"data-source-level\", token.level.toString()]);\n      }\n    }\n    return defaultRenderToken(tokens, idx, options);\n  };\n}\n","import cheerio from \"cheerio\";\n\nexport class CheerioMarkdownElement {\n  constructor(private readonly cheerioElt: cheerio.Cheerio) {}\n\n  get startLine(): number | undefined {\n    const data = this.cheerioElt.data(\"sourceLineStart\") as string | undefined;\n    return data !== undefined ? parseInt(data, 10) : undefined;\n  }\n\n  get endLine(): number | undefined {\n    const data = this.cheerioElt.data(\"sourceLineEnd\") as string | undefined;\n    return data !== undefined ? parseInt(data, 10) : undefined;\n  }\n\n  get markup(): string | undefined {\n    const data = this.cheerioElt.data(\"sourceMarkup\") as string | undefined;\n    return data !== undefined ? data : undefined;\n  }\n\n  get level(): number | undefined {\n    const data = this.cheerioElt.data(\"sourceLevel\") as string | undefined;\n    return data !== undefined ? parseInt(data, 10) : undefined;\n  }\n}\n","import cheerio from \"cheerio\";\n\nexport function cheerioToMarkdown(\n  elt: cheerio.Cheerio,\n  keepLinks = true\n): string {\n  const html = elt.html();\n  if (!html) {\n    return \"\";\n  }\n  const copy = cheerio.load(html);\n\n  if (keepLinks) {\n    copy(\"a\").each((i, linkElt) => {\n      copy(linkElt).text(\n        `[${copy(linkElt).text()}](${copy(linkElt).attr(\"href\")})`\n      );\n    });\n  }\n\n  return copy(\"body\").text();\n}\n","import cheerio from \"cheerio\";\nimport MarkdownIt from \"markdown-it\";\nimport { markdownItSourceMap } from \"./markdown-it-source-map-plugin\";\nimport { CheerioMarkdownElement } from \"./CheerioMarkdownElement\";\nimport { cheerioToMarkdown } from \"./cheerioToMarkdown\";\n\n// TODO: I am thinking to create a standalone library for this one\n\nconst markdownItInstance = new MarkdownIt();\nmarkdownItInstance.use(markdownItSourceMap);\n\nfunction isWindowsLine(line: string): boolean {\n  return line.endsWith(`\\r\\n`) || line.endsWith(`\\r`);\n}\n\ntype OnChangeObserver = (markdown: string) => void;\n\nexport class CheerioMarkdown {\n  public $!: cheerio.Root; // for read-only purposes only!\n\n  private readonly observers: OnChangeObserver[] = [];\n\n  constructor(private $markdown: string) {\n    this.updateMarkdown($markdown);\n  }\n\n  get markdown(): string {\n    return this.$markdown;\n  }\n\n  get nbLines(): number {\n    return this.markdown.split(`\\n`).length;\n  }\n\n  onChange(cb: OnChangeObserver): void {\n    this.observers.push(cb);\n  }\n\n  updateMarkdown(markdown: string): void {\n    this.$markdown = markdown;\n    this.$ = cheerio.load(markdownItInstance.render(this.markdown));\n    this.observers.forEach((observer) => observer(this.markdown));\n  }\n\n  getLine(i: number): string {\n    const lines = this.markdown.split(/\\r?\\n/);\n    if (lines[i] === undefined) {\n      throw new Error(`Unknown line ${i}`);\n    }\n    return lines[i];\n  }\n\n  replaceText(elt: cheerio.Cheerio, newText: string): void {\n    const mdElt = new CheerioMarkdownElement(elt);\n    if (mdElt.startLine === undefined || mdElt.endLine === undefined) {\n      throw new Error(\"Cannot source-map this element from Markdown\");\n    }\n\n    for (let i = mdElt.startLine; i < mdElt.endLine; i += 1) {\n      const newLine = this.getLine(mdElt.startLine).replace(\n        cheerioToMarkdown(elt),\n        newText\n      );\n      this.replaceLine(mdElt.startLine, newLine);\n    }\n  }\n\n  deleteElement(elt: cheerio.Cheerio): void {\n    const mdElt = new CheerioMarkdownElement(elt);\n    if (mdElt.startLine === undefined || mdElt.endLine === undefined) {\n      throw new Error(\"Cannot source-map this element from Markdown\");\n    }\n    this.deleteLines(mdElt.startLine, mdElt.endLine - 1);\n  }\n\n  replaceLine(i: number, newLine: string): void {\n    const lines = this.markdown.split(`\\n`);\n    if (lines[i] === undefined) {\n      throw new Error(`Unknown line ${i}`);\n    }\n    lines[i] = `${newLine}${isWindowsLine(lines[i]) ? `\\r` : \"\"}`;\n    this.updateMarkdown(lines.join(`\\n`));\n  }\n\n  deleteLines(start: number, end?: number): void {\n    const lines = this.markdown.split(`\\n`);\n    if (lines[start] === undefined) {\n      throw new Error(`Unknown line ${start}`);\n    }\n    const length = end ? end - start + 1 : 1;\n    lines.splice(start, length);\n    this.updateMarkdown(lines.join(`\\n`));\n  }\n\n  insertLineAt(i: number, newLine: string): void {\n    const lines = this.markdown.split(`\\n`);\n    if (lines.length === 0) {\n      lines.push(`\\n`);\n    }\n    if (lines[i] === undefined) {\n      throw new Error(`Unknown line ${i}`);\n    }\n    lines.splice(i, 0, `${newLine}${isWindowsLine(lines[i]) ? `\\r` : \"\"}`);\n    this.updateMarkdown(lines.join(`\\n`));\n  }\n\n  insertLineAfter(elt: cheerio.Cheerio, newLine: string): void {\n    const mdElt = new CheerioMarkdownElement(elt);\n    if (mdElt.endLine === undefined) {\n      throw new Error(\"Cannot source-map this element from Markdown\");\n    }\n    const end = elt.is(\"ul\") ? mdElt.endLine - 1 : mdElt.endLine;\n    this.insertLineAt(end, newLine);\n  }\n\n  appendLine(newLine: string): void {\n    const lines = this.markdown.split(`\\n`);\n    const windowsLines = lines.length > 0 ? isWindowsLine(lines[0]) : false;\n    if (lines[lines.length - 1].trim() === \"\") {\n      delete lines[lines.length - 1];\n    }\n    lines.push(`${newLine}${windowsLines ? `\\r` : \"\"}`);\n    lines.push(`${windowsLines ? `\\r` : \"\"}\\n`);\n    this.updateMarkdown(lines.join(`\\n`));\n  }\n\n  appendToList(ul: cheerio.Cheerio, newItem: string): void {\n    if (!ul.is(\"ul\")) {\n      throw new TypeError(\"Given element is not a <ul>\");\n    }\n    const mdElt = new CheerioMarkdownElement(ul);\n    if (mdElt.markup === undefined || mdElt.level === undefined) {\n      throw new Error(\"Cannot source-map this element from Markdown\");\n    }\n    if (mdElt.level > 0) {\n      throw new Error(\"Sub-lists are not implemented yet\");\n    }\n    const newLine = `${mdElt.markup} ${newItem}`;\n    this.insertLineAfter(ul, newLine);\n  }\n}\n","import cheerio from \"cheerio\";\nimport { Entity, Log4brainsError } from \"@src/domain\";\nimport { CheerioMarkdown, cheerioToMarkdown } from \"@src/lib/cheerio-markdown\";\nimport type { Adr } from \"./Adr\";\nimport { MarkdownAdrLinkResolver } from \"./MarkdownAdrLinkResolver\";\n\ntype Props = {\n  value: string;\n};\n\ntype ElementAndRegExpMatch = {\n  element: cheerio.Cheerio;\n  match: string[];\n};\n\ntype Link = {\n  text: string;\n  href: string;\n};\n\nfunction htmlentities(str: string): string {\n  return str\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\");\n}\n\nexport class MarkdownBody extends Entity<Props> {\n  private cm: CheerioMarkdown;\n\n  private adrLinkResolver?: MarkdownAdrLinkResolver;\n\n  constructor(value: string) {\n    super({ value });\n    this.cm = new CheerioMarkdown(value);\n    this.cm.onChange((newValue) => {\n      this.props.value = newValue;\n    });\n  }\n\n  setAdrLinkResolver(resolver: MarkdownAdrLinkResolver): MarkdownBody {\n    this.adrLinkResolver = resolver;\n    return this;\n  }\n\n  private getFirstH1TitleElement(): cheerio.Cheerio | undefined {\n    const elt = this.cm.$(\"h1\").first();\n    return elt.length > 0 ? elt : undefined;\n  }\n\n  getFirstH1Title(): string | undefined {\n    return this.getFirstH1TitleElement()?.text();\n  }\n\n  setFirstH1Title(title: string): void {\n    const elt = this.getFirstH1TitleElement();\n    if (elt) {\n      this.cm.replaceText(elt, title);\n    } else {\n      this.cm.insertLineAt(0, `# ${title}`);\n    }\n  }\n\n  deleteFirstH1Title(): void {\n    const elt = this.getFirstH1TitleElement();\n    if (elt) {\n      this.cm.deleteElement(elt);\n    }\n  }\n\n  private getHeaderMetadataUl(): cheerio.Cheerio | undefined {\n    const elts = this.cm.$(\"body > *:first-child\").nextUntil(\"h2\").addBack();\n    const ul = elts.filter(\"ul\").first();\n    return ul.length > 0 ? ul : undefined;\n  }\n\n  private getHeaderMetadataElementAndMatch(\n    key: string\n  ): ElementAndRegExpMatch | undefined {\n    const ul = this.getHeaderMetadataUl();\n    if (!ul) {\n      return undefined;\n    }\n    const regexp = new RegExp(`^(\\\\s*${key}\\\\s*:\\\\s*)(.*)$`, \"i\");\n    const result = ul\n      .children()\n      .map((i, li) => {\n        const line = this.cm.$(li);\n        const match = regexp.exec(line.text());\n        return match ? { element: this.cm.$(li), match } : undefined;\n      })\n      .get() as ElementAndRegExpMatch[];\n    return result[0] ?? undefined;\n  }\n\n  getHeaderMetadata(key: string): string | undefined {\n    return this.getHeaderMetadataElementAndMatch(key)?.match[2].trim();\n  }\n\n  setHeaderMetadata(key: string, value: string): void {\n    const res = this.getHeaderMetadataElementAndMatch(key);\n    if (res) {\n      this.cm.replaceText(res.element, `${res.match[1]}${value}`);\n    } else {\n      const ul = this.getHeaderMetadataUl();\n      if (ul) {\n        this.cm.appendToList(ul, `${key}: ${value}`);\n      } else {\n        const h1TitleElt = this.getFirstH1TitleElement();\n        if (h1TitleElt) {\n          this.cm.insertLineAfter(h1TitleElt, `\\n- ${key}: ${value}\\n`);\n        } else {\n          this.cm.insertLineAt(0, `- ${key}: ${value}`);\n        }\n      }\n    }\n  }\n\n  deleteHeaderMetadata(key: string): void {\n    // TODO: fix bug: when the last item is deleted, it deletes also the next new line.\n    // As a result, it is not detected as a list anymore.\n    const res = this.getHeaderMetadataElementAndMatch(key);\n    if (res) {\n      this.cm.deleteElement(res.element);\n    }\n  }\n\n  private getLinksUl(): cheerio.Cheerio | undefined {\n    const h2Results = this.cm.$(\"h2\").filter(\n      (i, elt) =>\n        this.cm\n          .$(elt)\n          .text()\n          .toLowerCase()\n          .replace(/<!--.*-->/, \"\")\n          .trim() === \"links\"\n    );\n    if (h2Results.length === 0) {\n      return undefined;\n    }\n    const h2 = h2Results[0];\n    const elts = this.cm.$(h2).nextUntil(\"h2\");\n    const ul = elts.filter(\"ul\").first();\n    return ul.length > 0 ? ul : undefined;\n  }\n\n  getLinks(): string[] | undefined {\n    const ul = this.getLinksUl();\n    if (!ul) {\n      return undefined;\n    }\n    return ul\n      .children()\n      .map((i, li) => cheerioToMarkdown(this.cm.$(li)))\n      .get() as string[];\n  }\n\n  addLink(link: string): void {\n    const ul = this.getLinksUl();\n    if (ul === undefined) {\n      this.cm.appendLine(`\\n## Links\\n\\n- ${link}`);\n    } else {\n      this.cm.appendToList(ul, link);\n    }\n  }\n\n  addLinkNoDuplicate(link: string): void {\n    const links = this.getLinks();\n    if (\n      links &&\n      links\n        .map((l) => l.toLowerCase().trim())\n        .filter((l) => l === link.toLowerCase().trim()).length > 0\n    ) {\n      return;\n    }\n    this.addLink(link);\n  }\n\n  getRawMarkdown(): string {\n    return this.props.value;\n  }\n\n  clone(): MarkdownBody {\n    const copy = new MarkdownBody(this.props.value);\n    if (this.adrLinkResolver) {\n      copy.setAdrLinkResolver(this.adrLinkResolver);\n    }\n    return copy;\n  }\n\n  async replaceAdrLinks(from: Adr): Promise<void> {\n    const links = this.cm\n      .$(\"a\")\n      .map((_, element) => ({\n        text: this.cm.$(element).text(),\n        href: this.cm.$(element).attr(\"href\")\n      }))\n      .get() as Link[];\n\n    const isUrlRegexp = new RegExp(/^https?:\\/\\//i);\n\n    const promises = links\n      .filter((link) => !isUrlRegexp.exec(link.href))\n      .filter((link) => link.href.toLowerCase().endsWith(\".md\"))\n      .map((link) =>\n        (async () => {\n          if (!this.adrLinkResolver) {\n            throw new Log4brainsError(\n              \"Impossible to call replaceAdrLinks() without an MarkdownAdrLinkResolver\"\n            );\n          }\n          const mdAdrLink = await this.adrLinkResolver.resolve(from, link.href);\n          if (mdAdrLink) {\n            const params = [\n              `slug=\"${htmlentities(mdAdrLink.to.slug.value)}\"`,\n              `status=\"${mdAdrLink.to.status.name}\"`\n            ];\n            if (mdAdrLink.to.title) {\n              params.push(`title=\"${htmlentities(mdAdrLink.to.title)}\"`);\n            }\n            if (mdAdrLink.to.package) {\n              params.push(\n                `package=\"${htmlentities(mdAdrLink.to.package.name)}\"`\n              );\n            }\n            if (\n              ![\n                mdAdrLink.to.slug.value.toLowerCase(),\n                mdAdrLink.to.slug.namePart.toLowerCase()\n              ].includes(link.text.toLowerCase().trim())\n            ) {\n              params.push(`customLabel=\"${htmlentities(link.text)}\"`);\n            }\n            this.cm.updateMarkdown(\n              this.cm.markdown.replace(\n                `[${link.text}](${link.href})`,\n                `<AdrLink ${params.join(\" \")} />`\n              )\n            );\n          }\n        })()\n      );\n\n    await Promise.all(promises);\n  }\n}\n","import { Entity } from \"@src/domain\";\nimport { FilesystemPath } from \"./FilesystemPath\";\nimport { PackageRef } from \"./PackageRef\";\n\ntype Props = {\n  ref: PackageRef;\n  path: FilesystemPath;\n  adrFolderPath: FilesystemPath;\n};\n\nexport class Package extends Entity<Props> {\n  get ref(): PackageRef {\n    return this.props.ref;\n  }\n\n  get path(): FilesystemPath {\n    return this.props.path;\n  }\n\n  get adrFolderPath(): FilesystemPath {\n    return this.props.adrFolderPath;\n  }\n}\n","export abstract class Command {}\n","export abstract class Query {}\n","import { AdrSlug } from \"@src/adr/domain\";\nimport { Command } from \"@src/application\";\n\nexport class CreateAdrFromTemplateCommand extends Command {\n  constructor(public readonly slug: AdrSlug, public readonly title: string) {\n    super();\n  }\n}\n","import { AdrSlug } from \"@src/adr/domain\";\nimport { Command } from \"@src/application\";\n\nexport class SupersedeAdrCommand extends Command {\n  constructor(\n    public readonly supersededSlug: AdrSlug,\n    public readonly supersederSlug: AdrSlug\n  ) {\n    super();\n  }\n}\n","import { PackageRef } from \"@src/adr/domain\";\nimport { CommandHandler } from \"@src/application\";\nimport { CreateAdrFromTemplateCommand } from \"../commands\";\nimport { AdrRepository, AdrTemplateRepository } from \"../repositories\";\n\ntype Deps = {\n  adrRepository: AdrRepository;\n  adrTemplateRepository: AdrTemplateRepository;\n};\n\nexport class CreateAdrFromTemplateCommandHandler implements CommandHandler {\n  readonly commandClass = CreateAdrFromTemplateCommand;\n\n  private readonly adrRepository: AdrRepository;\n\n  private readonly adrTemplateRepository: AdrTemplateRepository;\n\n  constructor({ adrRepository, adrTemplateRepository }: Deps) {\n    this.adrRepository = adrRepository;\n    this.adrTemplateRepository = adrTemplateRepository;\n  }\n\n  async execute(command: CreateAdrFromTemplateCommand): Promise<void> {\n    const packageRef = command.slug.packagePart\n      ? new PackageRef(command.slug.packagePart)\n      : undefined;\n    const template = await this.adrTemplateRepository.find(packageRef);\n    const adr = template.createAdrFromMe(command.slug, command.title);\n    await this.adrRepository.save(adr);\n  }\n}\n","import { CommandHandler } from \"@src/application\";\nimport { SupersedeAdrCommand } from \"../commands\";\nimport { AdrRepository } from \"../repositories\";\n\ntype Deps = {\n  adrRepository: AdrRepository;\n};\n\nexport class SupersedeAdrCommandHandler implements CommandHandler {\n  readonly commandClass = SupersedeAdrCommand;\n\n  private readonly adrRepository: AdrRepository;\n\n  constructor({ adrRepository }: Deps) {\n    this.adrRepository = adrRepository;\n  }\n\n  async execute(command: SupersedeAdrCommand): Promise<void> {\n    const supersededAdr = await this.adrRepository.find(command.supersededSlug);\n    const supersederAdr = await this.adrRepository.find(command.supersederSlug);\n    supersededAdr.supersedeBy(supersederAdr);\n    await this.adrRepository.save(supersededAdr);\n    await this.adrRepository.save(supersederAdr);\n  }\n}\n","import { PackageRef } from \"@src/adr/domain\";\nimport { Query } from \"@src/application\";\n\nexport class GenerateAdrSlugFromTitleQuery extends Query {\n  constructor(\n    public readonly title: string,\n    public readonly packageRef?: PackageRef\n  ) {\n    super();\n  }\n}\n","import { AdrSlug } from \"@src/adr/domain\";\nimport { Query } from \"@src/application\";\n\nexport class GetAdrBySlugQuery extends Query {\n  constructor(public readonly slug: AdrSlug) {\n    super();\n  }\n}\n","import { AdrStatus } from \"@src/adr/domain\";\nimport { Query } from \"@src/application\";\n\nexport type SearchAdrsFilters = {\n  statuses?: AdrStatus[];\n};\n\nexport class SearchAdrsQuery extends Query {\n  constructor(public readonly filters: SearchAdrsFilters) {\n    super();\n  }\n}\n","import { AdrSlug } from \"@src/adr/domain\";\nimport { QueryHandler } from \"@src/application\";\nimport { GenerateAdrSlugFromTitleQuery } from \"../queries\";\nimport { AdrRepository } from \"../repositories\";\n\ntype Deps = {\n  adrRepository: AdrRepository;\n};\n\nexport class GenerateAdrSlugFromTitleQueryHandler implements QueryHandler {\n  readonly queryClass = GenerateAdrSlugFromTitleQuery;\n\n  private readonly adrRepository: AdrRepository;\n\n  constructor({ adrRepository }: Deps) {\n    this.adrRepository = adrRepository;\n  }\n\n  execute(query: GenerateAdrSlugFromTitleQuery): Promise<AdrSlug> {\n    return Promise.resolve(\n      this.adrRepository.generateAvailableSlug(query.title, query.packageRef)\n    );\n  }\n}\n","import { Adr } from \"@src/adr/domain\";\nimport { QueryHandler } from \"@src/application\";\nimport { Log4brainsError } from \"@src/domain\";\nimport { GetAdrBySlugQuery } from \"../queries\";\nimport { AdrRepository } from \"../repositories\";\n\ntype Deps = {\n  adrRepository: AdrRepository;\n};\n\nexport class GetAdrBySlugQueryHandler implements QueryHandler {\n  readonly queryClass = GetAdrBySlugQuery;\n\n  private readonly adrRepository: AdrRepository;\n\n  constructor({ adrRepository }: Deps) {\n    this.adrRepository = adrRepository;\n  }\n\n  async execute(query: GetAdrBySlugQuery): Promise<Adr | undefined> {\n    try {\n      return await this.adrRepository.find(query.slug);\n    } catch (e) {\n      if (\n        !(e instanceof Log4brainsError && e.name === \"This ADR does not exist\")\n      ) {\n        throw e;\n      }\n    }\n    return undefined;\n  }\n}\n","import { Adr } from \"@src/adr/domain\";\nimport { QueryHandler } from \"@src/application\";\nimport { ValueObjectArray } from \"@src/domain\";\nimport { SearchAdrsQuery } from \"../queries\";\nimport { AdrRepository } from \"../repositories\";\n\ntype Deps = {\n  adrRepository: AdrRepository;\n};\n\nexport class SearchAdrsQueryHandler implements QueryHandler {\n  readonly queryClass = SearchAdrsQuery;\n\n  private readonly adrRepository: AdrRepository;\n\n  constructor({ adrRepository }: Deps) {\n    this.adrRepository = adrRepository;\n  }\n\n  async execute(query: SearchAdrsQuery): Promise<Adr[]> {\n    return (await this.adrRepository.findAll()).filter((adr) => {\n      if (\n        query.filters.statuses &&\n        !ValueObjectArray.inArray(adr.status, query.filters.statuses)\n      ) {\n        return false;\n      }\n      return true;\n    });\n  }\n}\n","import {\n  Adr,\n  AdrFile,\n  MarkdownAdrLink,\n  MarkdownAdrLinkResolver as IMarkdownAdrLinkResolver\n} from \"@src/adr/domain\";\nimport { Log4brainsError } from \"@src/domain\";\nimport type { AdrRepository } from \"./repositories\";\n\ntype Deps = {\n  adrRepository: AdrRepository;\n};\n\nexport class MarkdownAdrLinkResolver implements IMarkdownAdrLinkResolver {\n  private readonly adrRepository: AdrRepository;\n\n  constructor({ adrRepository }: Deps) {\n    this.adrRepository = adrRepository;\n  }\n\n  async resolve(from: Adr, uri: string): Promise<MarkdownAdrLink | undefined> {\n    if (!from.file) {\n      throw new Log4brainsError(\n        \"Impossible to resolve links on an non-saved ADR\"\n      );\n    }\n\n    const path = from.file.path.join(\"..\").join(uri);\n    if (!AdrFile.isPathValid(path)) {\n      return undefined;\n    }\n\n    const to = await this.adrRepository.findFromFile(new AdrFile(path));\n    if (!to) {\n      return undefined;\n    }\n\n    return new MarkdownAdrLink(from, to);\n  }\n}\n","/* eslint-disable class-methods-use-this */\nimport fs, { promises as fsP } from \"fs\";\nimport path from \"path\";\nimport simpleGit, { SimpleGit } from \"simple-git\";\nimport { AdrRepository as IAdrRepository } from \"@src/adr/application\";\nimport {\n  Adr,\n  AdrFile,\n  AdrSlug,\n  Author,\n  FilesystemPath,\n  MarkdownBody,\n  PackageRef\n} from \"@src/adr/domain\";\nimport { Log4brainsConfig } from \"@src/infrastructure/config\";\nimport { Log4brainsError } from \"@src/domain\";\nimport { PackageRepository } from \"./PackageRepository\";\nimport { MarkdownAdrLinkResolver } from \"../MarkdownAdrLinkResolver\";\n\ntype GitMetadata = {\n  creationDate: Date;\n  lastEditDate: Date;\n  lastEditAuthor: Author;\n};\n\ntype Deps = {\n  config: Log4brainsConfig;\n  workdir: string;\n  packageRepository: PackageRepository;\n};\n\nexport class AdrRepository implements IAdrRepository {\n  private readonly config: Log4brainsConfig;\n\n  private readonly workdir: string;\n\n  private readonly packageRepository: PackageRepository;\n\n  private readonly git: SimpleGit;\n\n  private gitAvailable?: boolean;\n\n  private anonymousAuthor?: Author;\n\n  private readonly markdownAdrLinkResolver: MarkdownAdrLinkResolver;\n\n  constructor({ config, workdir, packageRepository }: Deps) {\n    this.config = config;\n    this.workdir = workdir;\n    this.packageRepository = packageRepository;\n    this.git = simpleGit({ baseDir: workdir });\n    this.markdownAdrLinkResolver = new MarkdownAdrLinkResolver({\n      adrRepository: this\n    });\n  }\n\n  private async isGitAvailable(): Promise<boolean> {\n    if (this.gitAvailable === undefined) {\n      try {\n        this.gitAvailable = await this.git.checkIsRepo();\n      } catch (e) {\n        this.gitAvailable = false;\n      }\n    }\n    return this.gitAvailable;\n  }\n\n  async find(slug: AdrSlug): Promise<Adr> {\n    const packageRef = this.getPackageRef(slug);\n    const adr = await this.findInPath(\n      slug,\n      this.getAdrFolderPath(packageRef),\n      packageRef\n    );\n    if (!adr) {\n      throw new Log4brainsError(\"This ADR does not exist\", slug.value);\n    }\n    return adr;\n  }\n\n  async findFromFile(adrFile: AdrFile): Promise<Adr | undefined> {\n    const adrFolderPath = adrFile.path.join(\"..\");\n    const pkg = this.packageRepository.findByAdrFolderPath(adrFolderPath);\n    const possibleSlug = AdrSlug.createFromFile(\n      adrFile,\n      pkg ? pkg.ref : undefined\n    );\n\n    try {\n      return await this.find(possibleSlug);\n    } catch (e) {\n      // ignore\n    }\n    return undefined;\n  }\n\n  async findAll(): Promise<Adr[]> {\n    const packages = this.packageRepository.findAll();\n    return (\n      await Promise.all([\n        this.findAllInPath(this.getAdrFolderPath()),\n        ...packages.map((pkg) => {\n          return this.findAllInPath(pkg.adrFolderPath, pkg.ref);\n        })\n      ])\n    )\n      .flat()\n      .sort(Adr.compare);\n  }\n\n  private async getGitMetadata(\n    file: AdrFile\n  ): Promise<GitMetadata | undefined> {\n    if (!(await this.isGitAvailable())) {\n      return undefined;\n    }\n\n    let logs;\n    let retry = 0;\n    do {\n      // eslint-disable-next-line no-await-in-loop\n      logs = (await this.git.log([file.path.absolutePath])).all;\n\n      // TODO: debug this strange bug\n      // Sometimes, especially during snapshot testing, the `git log` command retruns nothing.\n      // And after a second retry, it works.\n      // Impossible to find out why for now, and since it causes a lot of false positive in the integration tests,\n      // we had to implement this quickfix\n      retry += 1;\n    } while (logs.length === 0 && retry <= 1);\n\n    if (logs.length === 0) {\n      return undefined;\n    }\n\n    return {\n      creationDate: new Date(logs[logs.length - 1].date),\n      lastEditDate: new Date(logs[0].date),\n      lastEditAuthor: new Author(logs[0].author_name, logs[0].author_email)\n    };\n  }\n\n  /**\n   * In preview mode, we set the Anonymous author as the current Git `user.name` global config.\n   * It should not append in CI. But if this is the case, it will appear as \"Anonymous\".\n   * Response is cached.\n   */\n  private async getAnonymousAuthor(): Promise<Author> {\n    if (!this.anonymousAuthor) {\n      this.anonymousAuthor = Author.createAnonymous();\n      if (await this.isGitAvailable()) {\n        const config = await this.git.listConfig();\n        if (config?.all[\"user.name\"]) {\n          this.anonymousAuthor = new Author(\n            config.all[\"user.name\"] as string,\n            config.all[\"user.email\"] as string | undefined\n          );\n        }\n      }\n    }\n    return this.anonymousAuthor;\n  }\n\n  private async getLastEditDateFromFilesystem(file: AdrFile): Promise<Date> {\n    const stat = await fsP.stat(file.path.absolutePath);\n    return stat.mtime;\n  }\n\n  private async findInPath(\n    slug: AdrSlug,\n    p: FilesystemPath,\n    packageRef?: PackageRef\n  ): Promise<Adr | undefined> {\n    return (\n      await this.findAllInPath(p, packageRef, (f: AdrFile, s: AdrSlug) =>\n        s.equals(slug)\n      )\n    ).pop();\n  }\n\n  private async findAllInPath(\n    p: FilesystemPath,\n    packageRef?: PackageRef,\n    filter?: (f: AdrFile, s: AdrSlug) => boolean\n  ): Promise<Adr[]> {\n    const files = await fsP.readdir(p.absolutePath);\n    return Promise.all(\n      files\n        .map((filename) => {\n          return new FilesystemPath(\n            p.cwdAbsolutePath,\n            path.join(p.pathRelativeToCwd, filename)\n          );\n        })\n        .filter((fsPath) => {\n          return AdrFile.isPathValid(fsPath);\n        })\n        .map((fsPath) => {\n          const adrFile = new AdrFile(fsPath);\n          const slug = AdrSlug.createFromFile(adrFile, packageRef);\n          return { adrFile, slug };\n        })\n        .filter(({ adrFile, slug }) => {\n          if (filter) {\n            return filter(adrFile, slug);\n          }\n          return true;\n        })\n        .map(({ adrFile, slug }) => {\n          return fsP\n            .readFile(adrFile.path.absolutePath, {\n              encoding: \"utf8\"\n            })\n            .then(async (markdown) => {\n              const baseAdrProps = {\n                slug,\n                package: packageRef,\n                body: new MarkdownBody(markdown).setAdrLinkResolver(\n                  this.markdownAdrLinkResolver\n                ),\n                file: adrFile\n              };\n\n              // The file is versionned in Git\n              const gitMetadata = await this.getGitMetadata(adrFile);\n              if (gitMetadata) {\n                return new Adr({\n                  ...baseAdrProps,\n                  creationDate: gitMetadata.creationDate,\n                  lastEditDate: gitMetadata.lastEditDate,\n                  lastEditAuthor: gitMetadata.lastEditAuthor\n                });\n              }\n\n              // The file is not versionned in Git yet\n              // So we rely on filesystem's last edit date and global git config\n              const lastEditDate = await this.getLastEditDateFromFilesystem(\n                adrFile\n              );\n              return new Adr({\n                ...baseAdrProps,\n                creationDate: lastEditDate,\n                lastEditDate,\n                lastEditAuthor: await this.getAnonymousAuthor()\n              });\n            });\n        })\n    );\n  }\n\n  generateAvailableSlug(title: string, packageRef?: PackageRef): AdrSlug {\n    const adrFolderPath = this.getAdrFolderPath(packageRef);\n    const baseSlug = AdrSlug.createFromTitle(title, packageRef);\n\n    let i = 1;\n    let slug: AdrSlug;\n    let filename: string;\n    do {\n      slug = new AdrSlug(`${baseSlug.value}${i > 1 ? `-${i}` : \"\"}`);\n      filename = `${slug.namePart}.md`;\n      i += 1;\n    } while (fs.existsSync(path.join(adrFolderPath.absolutePath, filename)));\n\n    return slug;\n  }\n\n  private getPackageRef(slug: AdrSlug): PackageRef | undefined {\n    // undefined if global\n    return slug.packagePart ? new PackageRef(slug.packagePart) : undefined;\n  }\n\n  private getAdrFolderPath(packageRef?: PackageRef): FilesystemPath {\n    const pkg = packageRef\n      ? this.packageRepository.find(packageRef)\n      : undefined;\n    const cwd = path.resolve(this.workdir);\n    return pkg\n      ? pkg.adrFolderPath\n      : new FilesystemPath(cwd, this.config.project.adrFolder);\n  }\n\n  async save(adr: Adr): Promise<void> {\n    let { file } = adr;\n    if (!file) {\n      file = AdrFile.createFromSlugInFolder(\n        this.getAdrFolderPath(adr.package),\n        adr.slug\n      );\n      if (fs.existsSync(file.path.absolutePath)) {\n        throw new Log4brainsError(\n          \"An ADR with this slug already exists\",\n          adr.slug.value\n        );\n      }\n      adr.setFile(file);\n    }\n    await fsP.writeFile(file.path.absolutePath, adr.body.getRawMarkdown(), {\n      encoding: \"utf-8\"\n    });\n  }\n}\n","/* eslint-disable class-methods-use-this */\nimport fs, { promises as fsP } from \"fs\";\nimport path from \"path\";\nimport { AdrTemplateRepository as IAdrTemplateRepository } from \"@src/adr/application\";\nimport {\n  AdrTemplate,\n  FilesystemPath,\n  MarkdownBody,\n  PackageRef\n} from \"@src/adr/domain\";\nimport { Log4brainsConfig } from \"@src/infrastructure/config\";\nimport { Log4brainsError } from \"@src/domain\";\nimport { PackageRepository } from \"./PackageRepository\";\n\ntype Deps = {\n  config: Log4brainsConfig;\n  workdir: string;\n  packageRepository: PackageRepository;\n};\n\nexport class AdrTemplateRepository implements IAdrTemplateRepository {\n  private readonly config: Log4brainsConfig;\n\n  private readonly workdir: string;\n\n  private readonly packageRepository: PackageRepository;\n\n  constructor({ config, workdir, packageRepository }: Deps) {\n    this.config = config;\n    this.workdir = workdir;\n    this.packageRepository = packageRepository;\n  }\n\n  async find(packageRef?: PackageRef): Promise<AdrTemplate> {\n    const adrFolderPath = this.getAdrFolderPath(packageRef);\n    const templatePath = path.join(adrFolderPath.absolutePath, \"template.md\");\n    if (!fs.existsSync(templatePath)) {\n      if (packageRef) {\n        // Returns the global template when there is no custom template for a package\n        const globalTemplate = await this.find();\n        return new AdrTemplate({\n          package: packageRef,\n          body: globalTemplate.body\n        });\n      }\n      throw new Log4brainsError(\n        \"The template.md file does not exist\",\n        path.join(adrFolderPath.pathRelativeToCwd, \"template.md\")\n      );\n    }\n\n    const markdown = await fsP.readFile(templatePath, {\n      encoding: \"utf8\"\n    });\n    return new AdrTemplate({\n      package: packageRef,\n      body: new MarkdownBody(markdown)\n    });\n  }\n\n  private getAdrFolderPath(packageRef?: PackageRef): FilesystemPath {\n    const pkg = packageRef\n      ? this.packageRepository.find(packageRef)\n      : undefined;\n    const cwd = path.resolve(this.workdir);\n    return pkg\n      ? pkg.adrFolderPath\n      : new FilesystemPath(cwd, this.config.project.adrFolder);\n  }\n}\n","import path from \"path\";\nimport fs from \"fs\";\nimport { FilesystemPath, Package, PackageRef } from \"@src/adr/domain\";\nimport { Log4brainsConfig } from \"@src/infrastructure/config\";\nimport { Log4brainsError } from \"@src/domain\";\n\ntype Deps = {\n  config: Log4brainsConfig;\n  workdir: string;\n};\n\nexport class PackageRepository {\n  private readonly config: Log4brainsConfig;\n\n  private readonly workdir: string;\n\n  // We cache findAll() results to avoid unnecessary I/O checks\n  private packages?: Package[];\n\n  constructor({ config, workdir }: Deps) {\n    this.config = config;\n    this.workdir = workdir;\n  }\n\n  find(packageRef: PackageRef): Package {\n    const pkg = this.findAll()\n      .filter((p) => p.ref.equals(packageRef))\n      .pop();\n    if (!pkg) {\n      throw new Log4brainsError(\n        \"No entry in the configuration for this package\",\n        packageRef.name\n      );\n    }\n    return pkg;\n  }\n\n  findByAdrFolderPath(adrFolderPath: FilesystemPath): Package | undefined {\n    return this.findAll()\n      .filter((p) => p.adrFolderPath.equals(adrFolderPath))\n      .pop();\n  }\n\n  findAll(): Package[] {\n    if (!this.packages) {\n      this.packages = (\n        this.config.project.packages || []\n      ).map((packageConfig) =>\n        this.buildPackage(\n          packageConfig.name,\n          packageConfig.path,\n          packageConfig.adrFolder\n        )\n      );\n    }\n    return this.packages;\n  }\n\n  private buildPackage(\n    name: string,\n    projectPath: string,\n    adrFolder: string\n  ): Package {\n    const cwd = path.resolve(this.workdir);\n    const pkg = new Package({\n      ref: new PackageRef(name),\n      path: new FilesystemPath(cwd, projectPath),\n      adrFolderPath: new FilesystemPath(cwd, adrFolder)\n    });\n\n    if (!fs.existsSync(pkg.path.absolutePath)) {\n      throw new Log4brainsError(\n        \"Package path does not exist\",\n        `${pkg.path.pathRelativeToCwd} (${pkg.ref.name})`\n      );\n    }\n\n    if (!fs.existsSync(pkg.adrFolderPath.absolutePath)) {\n      throw new Log4brainsError(\n        \"Package ADR folder path does not exist\",\n        `${pkg.adrFolderPath.pathRelativeToCwd} (${pkg.ref.name})`\n      );\n    }\n\n    return pkg;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { Command, CommandHandler } from \"@src/application\";\n\nexport class CommandBus {\n  private readonly handlersByCommandName: Map<string, CommandHandler> = new Map<\n    string,\n    CommandHandler\n  >();\n\n  registerHandler(handler: CommandHandler, commandClass: Function): void {\n    this.handlersByCommandName.set(commandClass.name, handler);\n  }\n\n  async dispatch(command: Command): Promise<void> {\n    const commandName = command.constructor.name;\n    const handler = this.handlersByCommandName.get(commandName);\n    if (!handler) {\n      throw new Error(`No handler registered for this command: ${commandName}`);\n    }\n    return handler.execute(command);\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { Query, QueryHandler } from \"@src/application\";\n\nexport class QueryBus {\n  private readonly handlersByQueryName: Map<string, QueryHandler> = new Map<\n    string,\n    QueryHandler\n  >();\n\n  registerHandler(handler: QueryHandler, queryClass: Function): void {\n    this.handlersByQueryName.set(queryClass.name, handler);\n  }\n\n  async dispatch<QR>(query: Query): Promise<QR> {\n    const queryName = query.constructor.name;\n    const handler = this.handlersByQueryName.get(queryName);\n    if (!handler) {\n      throw new Error(`No handler registered for this query: ${queryName}`);\n    }\n    return handler.execute(query) as Promise<QR>;\n  }\n}\n","import { Log4brainsError } from \"@src/domain\";\nimport chokidar, { FSWatcher } from \"chokidar\";\nimport { Log4brainsConfig } from \"../config\";\n\nexport type FileWatcherEventType =\n  | \"add\"\n  | \"addDir\"\n  | \"change\"\n  | \"unlink\"\n  | \"unlinkDir\";\n\nexport type FileWatcherEvent = {\n  type: FileWatcherEventType;\n  relativePath: string;\n};\n\nexport type FileWatcherObserver = (event: FileWatcherEvent) => void;\nexport type FileWatcherUnsubscribeCb = () => void;\n\ntype Deps = {\n  config: Log4brainsConfig;\n  workdir: string;\n};\n\n/**\n * Watch files located in the main ADR folder, and in each package's ADR folder.\n * Useful for Hot Reloading.\n * The caller is responsible for starting and stopping it!\n */\nexport class FileWatcher {\n  private readonly config: Log4brainsConfig;\n\n  private readonly workdir: string;\n\n  private chokidar: FSWatcher | undefined;\n\n  private observers: Set<FileWatcherObserver> = new Set<FileWatcherObserver>();\n\n  constructor({ config, workdir }: Deps) {\n    this.workdir = workdir;\n    this.config = config;\n  }\n\n  subscribe(cb: FileWatcherObserver): FileWatcherUnsubscribeCb {\n    this.observers.add(cb);\n    return () => {\n      this.observers.delete(cb);\n    };\n  }\n\n  start(): void {\n    if (this.chokidar) {\n      throw new Log4brainsError(\"FileWatcher is already started\");\n    }\n\n    const paths = [\n      this.config.project.adrFolder,\n      ...(this.config.project.packages || []).map((pkg) => pkg.adrFolder)\n    ];\n    this.chokidar = chokidar\n      .watch(paths, {\n        ignoreInitial: true,\n        cwd: this.workdir,\n        disableGlobbing: true\n      })\n      .on(\"all\", (event, filePath) => {\n        this.observers.forEach((observer) =>\n          observer({\n            type: event,\n            relativePath: filePath\n          })\n        );\n      });\n  }\n\n  async stop(): Promise<void> {\n    if (!this.chokidar) {\n      throw new Log4brainsError(\"FileWatcher is not started\");\n    }\n    await this.chokidar.close();\n    this.chokidar = undefined;\n  }\n}\n","import {\n  createContainer,\n  asValue,\n  InjectionMode,\n  asClass,\n  AwilixContainer,\n  asFunction\n} from \"awilix\";\nimport { Log4brainsConfig } from \"@src/infrastructure/config\";\nimport * as adrCommandHandlers from \"@src/adr/application/command-handlers\";\nimport * as adrQueryHandlers from \"@src/adr/application/query-handlers\";\nimport { CommandHandler, QueryHandler } from \"@src/application\";\nimport * as repositories from \"@src/adr/infrastructure/repositories\";\nimport { CommandBus, QueryBus } from \"../buses\";\nimport { FileWatcher } from \"../file-watcher\";\n\nfunction lowerCaseFirstLetter(string: string): string {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nexport function buildContainer(\n  config: Log4brainsConfig,\n  workdir = \".\"\n): AwilixContainer {\n  const container: AwilixContainer = createContainer({\n    injectionMode: InjectionMode.PROXY\n  });\n\n  // Configuration & misc\n  container.register({\n    config: asValue(config),\n    workdir: asValue(workdir),\n    fileWatcher: asClass(FileWatcher).singleton()\n  });\n\n  // Repositories\n  Object.values(repositories).forEach((Repository) => {\n    container.register(\n      lowerCaseFirstLetter(Repository.name),\n      asClass<unknown>(Repository).singleton()\n    );\n  });\n\n  // Command handlers\n  Object.values(adrCommandHandlers).forEach((Handler) => {\n    container.register(\n      Handler.name,\n      asClass<CommandHandler>(Handler).singleton()\n    );\n  });\n\n  // Command bus\n  container.register({\n    commandBus: asFunction(() => {\n      const bus = new CommandBus();\n\n      Object.values(adrCommandHandlers).forEach((Handler) => {\n        const handlerInstance = container.resolve<CommandHandler>(Handler.name);\n        bus.registerHandler(handlerInstance, handlerInstance.commandClass);\n      });\n\n      return bus;\n    }).singleton()\n  });\n\n  // Query handlers\n  Object.values(adrQueryHandlers).forEach((Handler) => {\n    container.register(\n      Handler.name,\n      asClass<QueryHandler>(Handler).singleton()\n    );\n  });\n\n  // Query bus\n  container.register({\n    queryBus: asFunction(() => {\n      const bus = new QueryBus();\n\n      Object.values(adrQueryHandlers).forEach((Handler) => {\n        const handlerInstance = container.resolve<QueryHandler>(Handler.name);\n        bus.registerHandler(handlerInstance, handlerInstance.queryClass);\n      });\n\n      return bus;\n    }).singleton()\n  });\n\n  return container;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nconst deepFreezeRecur = (obj: any): any => {\n  if (typeof obj !== \"object\") {\n    return obj;\n  }\n  Object.keys(obj).forEach((prop) => {\n    if (typeof obj[prop] === \"object\" && !Object.isFrozen(obj[prop])) {\n      deepFreezeRecur(obj[prop]);\n    }\n  });\n  return Object.freeze(obj);\n};\n\n/**\n * Apply Object.freeze() recursively on the given object and sub-objects.\n */\nexport const deepFreeze = <T>(obj: T): T => {\n  return deepFreezeRecur(obj);\n};\n","import Joi from \"joi\";\n\ntype ProjectPackageConfig = Readonly<{\n  name: string;\n  path: string;\n  adrFolder: string;\n}>;\n\nconst projectPackageSchema = Joi.object({\n  name: Joi.string().hostname().required(),\n  path: Joi.string().required(),\n  adrFolder: Joi.string().required()\n});\n\nexport const gitProviders = [\n  \"github\",\n  \"gitlab\",\n  \"bitbucket\",\n  \"generic\"\n] as const;\nexport type GitProvider = typeof gitProviders[number];\n\n// Optional values are automatically guessed at configuration build time\nexport type GitRepositoryConfig = Readonly<{\n  url?: string;\n  provider?: GitProvider;\n  viewFileUriPattern?: string;\n}>;\n\nconst gitRepositorySchema = Joi.object({\n  url: Joi.string().uri(), // Guessed from the current Git configuration if omitted\n  provider: Joi.string().valid(...gitProviders), // Guessed from url if omitted (useful for enterprise plans with custom domains)\n  viewFileUriPattern: Joi.string() // Useful for unsupported providers. Example for GitHub: /blob/%branch/%path\n});\n\ntype ProjectConfig = Readonly<{\n  name: string;\n  tz: string;\n  adrFolder: string;\n  packages?: ProjectPackageConfig[];\n  repository?: GitRepositoryConfig;\n}>;\n\nconst projectSchema = Joi.object({\n  name: Joi.string().required(),\n  tz: Joi.string().required(),\n  adrFolder: Joi.string().required(),\n  packages: Joi.array().items(projectPackageSchema),\n  repository: gitRepositorySchema\n});\n\nexport type Log4brainsConfig = Readonly<{\n  project: ProjectConfig;\n}>;\n\nexport const schema = Joi.object({\n  project: projectSchema.required()\n});\n","import gitUrlParse from \"git-url-parse\";\nimport parseGitConfig from \"parse-git-config\";\nimport path from \"path\";\nimport { GitRepositoryConfig, Log4brainsConfig, gitProviders } from \"./schema\";\n\ntype GitRemoteConfig = {\n  url: string;\n};\nfunction isGitRemoteConfig(\n  remoteConfig: unknown\n): remoteConfig is GitRemoteConfig {\n  return (\n    typeof remoteConfig === \"object\" &&\n    remoteConfig !== null &&\n    \"url\" in remoteConfig\n  );\n}\n\nexport function guessGitRepositoryConfig(\n  existingConfig: Log4brainsConfig,\n  workdir: string\n): GitRepositoryConfig | undefined {\n  // URL\n  let url = existingConfig.project.repository?.url;\n  if (!url) {\n    // Try to guess from the current Git configuration\n    // We use parse-git-config and not SimpleGit because we want this method to remain synchronous\n    const gitConfig = parseGitConfig.sync({\n      path: path.join(workdir, \".git/config\")\n    });\n    if (isGitRemoteConfig(gitConfig['remote \"origin\"'])) {\n      url = gitConfig['remote \"origin\"'].url;\n    }\n  }\n  if (!url) {\n    return undefined;\n  }\n\n  const urlInfo = gitUrlParse(url);\n  if (\n    !urlInfo.protocol.includes(\"https\") &&\n    !urlInfo.protocol.includes(\"http\")\n  ) {\n    // Probably an SSH URL -> we try to convert it to HTTPS\n    url = urlInfo.toString(\"https\");\n  }\n\n  url = url.replace(/\\/$/, \"\"); // remove a possible trailing-slash\n\n  // PROVIDER\n  let provider = existingConfig.project.repository?.provider;\n  if (!provider || !gitProviders.includes(provider)) {\n    // Try to guess from the URL\n    provider =\n      gitProviders.filter((p) => urlInfo.resource.includes(p)).pop() ||\n      \"generic\";\n  }\n\n  // PATTERN\n  let viewFileUriPattern =\n    existingConfig.project.repository?.viewFileUriPattern;\n  if (!viewFileUriPattern) {\n    switch (provider) {\n      case \"gitlab\":\n        viewFileUriPattern = \"/-/blob/%branch/%path\";\n        break;\n\n      case \"bitbucket\":\n        viewFileUriPattern = \"/src/%branch/%path\";\n        break;\n\n      case \"github\":\n      default:\n        viewFileUriPattern = \"/blob/%branch/%path\";\n        break;\n    }\n  }\n\n  return {\n    url,\n    provider,\n    viewFileUriPattern\n  };\n}\n","import { Log4brainsError } from \"@src/domain\";\n\nexport class Log4brainsConfigNotFoundError extends Log4brainsError {\n  constructor() {\n    super(\"Impossible to find the .log4brains.yml config file\");\n  }\n}\n","import path from \"path\";\nimport fs from \"fs\";\nimport yaml from \"yaml\";\nimport { deepFreeze } from \"@src/utils\";\nimport { Log4brainsError } from \"@src/domain\";\nimport { Log4brainsConfig, schema } from \"./schema\";\nimport { guessGitRepositoryConfig } from \"./guessGitRepositoryConfig\";\nimport { Log4brainsConfigNotFoundError } from \"./Log4brainsConfigNotFoundError\";\n\nconst configFilename = \".log4brains.yml\";\n\nfunction getDuplicatedValues<O extends Record<string, unknown>>(\n  objects: O[],\n  key: keyof O\n): string[] {\n  const values = objects.map((object) => object[key]) as string[];\n  const countsMap = values.reduce<Record<string, number>>((counts, value) => {\n    return {\n      ...counts,\n      [value]: (counts[value] || 0) + 1\n    };\n  }, {});\n  return Object.keys(countsMap).filter((value) => countsMap[value] > 1);\n}\n\nexport function buildConfig(object: Record<string, unknown>): Log4brainsConfig {\n  const joiResult = schema.validate(object, {\n    abortEarly: false,\n    convert: false\n  });\n  if (joiResult.error) {\n    throw new Log4brainsError(\n      `There is an error in the ${configFilename} config file`,\n      joiResult.error?.message\n    );\n  }\n  const config = deepFreeze(joiResult.value) as Log4brainsConfig;\n\n  // Package name duplication\n  if (config.project.packages) {\n    const duplicatedPackageNames = getDuplicatedValues(\n      config.project.packages,\n      \"name\"\n    );\n    if (duplicatedPackageNames.length > 0) {\n      throw new Log4brainsError(\n        \"Some package names are duplicated\",\n        duplicatedPackageNames.join(\", \")\n      );\n    }\n  }\n\n  return config;\n}\n\nexport function buildConfigFromWorkdir(workdir = \".\"): Log4brainsConfig {\n  const workdirAbsolute = path.resolve(workdir);\n  const configPath = path.join(workdirAbsolute, configFilename);\n  if (!fs.existsSync(configPath)) {\n    throw new Log4brainsConfigNotFoundError();\n  }\n\n  try {\n    const content = fs.readFileSync(configPath, \"utf8\");\n    const object = yaml.parse(content) as Record<string, unknown>;\n    const config = buildConfig(object);\n    return deepFreeze({\n      ...config,\n      project: {\n        ...config.project,\n        repository: guessGitRepositoryConfig(config, workdir)\n      }\n    }) as Log4brainsConfig;\n  } catch (e) {\n    if (e instanceof Log4brainsError) {\n      throw e;\n    }\n    throw new Log4brainsError(\n      `Impossible to read the ${configFilename} config file`,\n      e\n    );\n  }\n}\n\nexport function findWorkdirRecursive(cwd = \".\"): string {\n  const cwdAbsolute = path.resolve(cwd);\n\n  if (fs.existsSync(path.join(cwdAbsolute, configFilename))) {\n    return cwdAbsolute;\n  }\n\n  const parsedPath = path.parse(cwdAbsolute);\n  if (parsedPath.dir === parsedPath.root) {\n    // we are at the filesystem root -> stop recursion\n    throw new Log4brainsConfigNotFoundError();\n  }\n\n  return findWorkdirRecursive(path.join(cwd, \"..\"));\n}\n","import { Adr, AdrFile } from \"@src/adr/domain\";\nimport { GitRepositoryConfig } from \"@src/infrastructure/config\";\nimport { deepFreeze } from \"@src/utils\";\nimport { AdrDto, AdrDtoStatus } from \"../types\";\n\nfunction buildViewUrl(\n  repositoryConfig: GitRepositoryConfig,\n  file: AdrFile\n): string | undefined {\n  if (!repositoryConfig.url || !repositoryConfig.viewFileUriPattern) {\n    return undefined;\n  }\n  const uri = repositoryConfig.viewFileUriPattern\n    .replace(\"%branch\", \"master\") // TODO: make this customizable, and fix the branch name for the Log4brains repository (develop instead of master)\n    .replace(\"%path\", file.path.pathRelativeToCwd);\n  return `${repositoryConfig.url.replace(/\\.git$/, \"\")}${uri}`;\n}\n\nexport async function adrToDto(\n  adr: Adr,\n  repositoryConfig?: GitRepositoryConfig\n): Promise<AdrDto> {\n  if (!adr.file) {\n    throw new Error(\"You are serializing an non-saved ADR\");\n  }\n\n  const viewUrl = repositoryConfig\n    ? buildViewUrl(repositoryConfig, adr.file)\n    : undefined;\n\n  return deepFreeze<AdrDto>({\n    slug: adr.slug.value,\n    package: adr.package?.name || null,\n    title: adr.title || null,\n    status: adr.status.name as AdrDtoStatus,\n    supersededBy: adr.superseder?.value || null,\n    tags: adr.tags,\n    deciders: adr.deciders,\n    body: {\n      rawMarkdown: adr.body.getRawMarkdown(),\n      enhancedMdx: await adr.getEnhancedMdx()\n    },\n    creationDate: adr.creationDate.toJSON(),\n    lastEditDate: adr.lastEditDate.toJSON(),\n    lastEditAuthor: adr.lastEditAuthor.name,\n    publicationDate: adr.publicationDate?.toJSON() || null,\n    file: {\n      relativePath: adr.file.path.pathRelativeToCwd,\n      absolutePath: adr.file.path.absolutePath\n    },\n    ...(repositoryConfig && repositoryConfig.provider && viewUrl\n      ? {\n          repository: {\n            provider: repositoryConfig.provider,\n            viewUrl\n          }\n        }\n      : undefined)\n  });\n}\n","import { AwilixContainer } from \"awilix\";\nimport { buildContainer } from \"@src/infrastructure/di\";\nimport open from \"open\";\nimport launchEditor from \"launch-editor\";\nimport { Adr, AdrSlug, AdrStatus, PackageRef } from \"@src/adr/domain\";\nimport {\n  CreateAdrFromTemplateCommand,\n  SupersedeAdrCommand\n} from \"@src/adr/application/commands\";\nimport {\n  SearchAdrsQuery,\n  SearchAdrsFilters as AppSearchAdrsFilters,\n  GenerateAdrSlugFromTitleQuery,\n  AdrRepository,\n  GetAdrBySlugQuery\n} from \"@src/adr/application\";\nimport { Log4brainsError } from \"@src/domain\";\nimport {\n  buildConfigFromWorkdir,\n  Log4brainsConfig,\n  findWorkdirRecursive\n} from \"../config\";\nimport { AdrDto, AdrDtoStatus } from \"./types\";\nimport { adrToDto } from \"./transformers\";\nimport { CommandBus, QueryBus } from \"../buses\";\nimport { FileWatcher } from \"../file-watcher\";\n\nexport type SearchAdrsFilters = {\n  statuses?: AdrDtoStatus[];\n};\n\n/**\n * Log4brains core API.\n * Use {@link Log4brains.create} to build an instance.\n */\nexport class Log4brains {\n  private readonly container: AwilixContainer;\n\n  private readonly commandBus: CommandBus;\n\n  private readonly queryBus: QueryBus;\n\n  private readonly adrRepository: AdrRepository;\n\n  private constructor(\n    public readonly config: Log4brainsConfig,\n    public readonly workdir = \".\"\n  ) {\n    this.container = buildContainer(config, workdir);\n    this.commandBus = this.container.resolve<CommandBus>(\"commandBus\");\n    this.queryBus = this.container.resolve<QueryBus>(\"queryBus\");\n    this.adrRepository = this.container.resolve<AdrRepository>(\"adrRepository\");\n\n    // @see Adr.tz\n    Adr.setTz(config.project.tz);\n  }\n\n  /**\n   * Returns the ADRs which match the given search filters.\n   * Returns all the ADRs of the project if no filter is given.\n   * The results are sorted with this order priority (ASC):\n   *  1. By the Date field from the markdown file (if available)\n   *  2. By the Git creation date (does not follow renames)\n   *  3. By slug\n   *\n   * @param filters Optional. Filters to apply to the search\n   *\n   * @throws {@link Log4brainsError}\n   * In case of a non-recoverable error.\n   */\n  async searchAdrs(filters?: SearchAdrsFilters): Promise<AdrDto[]> {\n    const appFilters: AppSearchAdrsFilters = {};\n    if (filters?.statuses) {\n      appFilters.statuses = filters.statuses.map((status) =>\n        AdrStatus.createFromName(status)\n      );\n    }\n    const adrs = await this.queryBus.dispatch<Adr[]>(\n      new SearchAdrsQuery(appFilters)\n    );\n    return Promise.all(\n      adrs.map((adr) => adrToDto(adr, this.config.project.repository))\n    );\n  }\n\n  /**\n   * Returns an ADR by its slug.\n   *\n   * @param slug ADR slug\n   *\n   * @throws {@link Log4brainsError}\n   * In case of a non-recoverable error.\n   */\n  async getAdrBySlug(slug: string): Promise<AdrDto | undefined> {\n    const adr = await this.queryBus.dispatch<Adr | undefined>(\n      new GetAdrBySlugQuery(new AdrSlug(slug))\n    );\n    return adr ? adrToDto(adr, this.config.project.repository) : undefined;\n  }\n\n  /**\n   * Generates an available ADR slug for the given title and package.\n   * Format: [package-name/]yyyymmdd-slugified-lowercased-title\n   *\n   * @param title The title of the ADR\n   * @param packageName Optional. The package name of the ADR.\n   *\n   * @throws {@link Log4brainsError}\n   * In case of a non-recoverable error.\n   */\n  async generateAdrSlug(title: string, packageName?: string): Promise<string> {\n    const packageRef = packageName ? new PackageRef(packageName) : undefined;\n    return (\n      await this.queryBus.dispatch<AdrSlug>(\n        new GenerateAdrSlugFromTitleQuery(title, packageRef)\n      )\n    ).value;\n  }\n\n  /**\n   * Creates a new ADR with the given slug and title with the default template.\n   * @param slug The slug of the ADR\n   * @param title The title of the ADR\n   *\n   * @throws {@link Log4brainsError}\n   * In case of a non-recoverable error.\n   */\n  async createAdrFromTemplate(slug: string, title: string): Promise<AdrDto> {\n    const slugObj = new AdrSlug(slug);\n    await this.commandBus.dispatch(\n      new CreateAdrFromTemplateCommand(slugObj, title)\n    );\n    return adrToDto(await this.adrRepository.find(slugObj));\n  }\n\n  /**\n   * Supersede an ADR with another one.\n   * @param supersededSlug Slug of the superseded ADR\n   * @param supersederSlug Slug of the superseder ADR\n   *\n   * @throws {@link Log4brainsError}\n   * In case of a non-recoverable error.\n   */\n  async supersedeAdr(\n    supersededSlug: string,\n    supersederSlug: string\n  ): Promise<void> {\n    const supersededSlugObj = new AdrSlug(supersededSlug);\n    const supersederSlugObj = new AdrSlug(supersederSlug);\n    await this.commandBus.dispatch(\n      new SupersedeAdrCommand(supersededSlugObj, supersederSlugObj)\n    );\n  }\n\n  /**\n   * Opens the given ADR in an editor on the local machine.\n   * Tries first to guess the preferred editor of the user thanks to https://github.com/yyx990803/launch-editor.\n   * If impossible to guess, uses xdg-open (or similar, depending on the OS, thanks to https://github.com/sindresorhus/open) as a fallback.\n   * The overall order is thus the following:\n   *  1) The currently running editor among the supported ones by launch-editor\n   *  2) The editor defined by the $VISUAL environment variable\n   *  3) The editor defined by the $EDITOR environment variable\n   *  4) Fallback: xdg-open or similar\n   *\n   * @param slug The ADR slug to open\n   * @param onImpossibleToGuess Optional. Callback called when the fallback method is used.\n   *                             Useful to display a warning to the user to tell him to set his $VISUAL environment variable for the next time.\n   *\n   * @throws {@link Log4brainsError}\n   * If the ADR does not exist or if even the fallback method fails.\n   */\n  async openAdrInEditor(\n    slug: string,\n    onImpossibleToGuess?: () => void\n  ): Promise<void> {\n    const adr = await this.queryBus.dispatch<Adr | undefined>(\n      new GetAdrBySlugQuery(new AdrSlug(slug))\n    );\n    if (!adr) {\n      throw new Log4brainsError(\"This ADR does not exist\", slug);\n    }\n    const { file } = adr;\n    if (!file) {\n      throw new Log4brainsError(\n        \"You are trying to open an non-saved ADR\",\n        slug\n      );\n    }\n\n    launchEditor(file.path.absolutePath, undefined, async () => {\n      await open(file.path.absolutePath);\n      if (onImpossibleToGuess) {\n        onImpossibleToGuess();\n      }\n    });\n  }\n\n  /**\n   * Returns a singleton instance of FileWatcher.\n   * Useful for Hot Reloading.\n   * @see FileWatcher\n   */\n  get fileWatcher(): FileWatcher {\n    return this.container.resolve<FileWatcher>(\"fileWatcher\");\n  }\n\n  /**\n   * Creates an instance of the Log4brains API.\n   *\n   * @param workdir Path to working directory (ie. where \".log4brains.yml\" is located)\n   *\n   * @throws {@link Log4brainsConfigNotFoundError}\n   * In case of missing config file.\n   *\n   * @throws {@link Log4brainsError}\n   * In case of invalid config file or other domain error.\n   */\n  static create(workdir = \".\"): Log4brains {\n    return new Log4brains(buildConfigFromWorkdir(workdir), workdir);\n  }\n\n  /**\n   * Creates an instance of the Log4brains API from a working directory.\n   * The real working directory (ie. where \".log4brains.yml\" is located) will be guessed looking in the parent directories.\n   *\n   * @param cwd Current working directory\n   *\n   * @throws {@link Log4brainsConfigNotFoundError}\n   * In case of missing config file.\n   *\n   * @throws {@link Log4brainsError}\n   * In case of invalid config file or other domain error.\n   */\n  static createFromCwd(cwd = \".\"): Log4brains {\n    const workdir = findWorkdirRecursive(cwd);\n    return Log4brains.create(workdir);\n  }\n}\n"],"names":["Entity","constructor","props","equals","e","AggregateRoot","Log4brainsError","Error","name","details","ValueObject","Object","freeze","vo","undefined","isEqual","ValueObjectArray","inArray","object","array","some","o","AdrSlug","value","namePart","includes","packagePart","s","split","length","createFromFile","file","packageRef","localSlug","path","basenameWithoutExtension","createFromTitle","title","date","slugifiedTitle","slugify","lower","strict","replace","moment","format","AdrStatus","createFromName","toLowerCase","startsWith","SUPERSEDED","status","values","filter","prop","pop","MarkdownAdrLink","from","to","toMarkdown","slug","relativePath","relative","AdrRelation","relation","link","Author","email","createAnonymous","dateFormats","Adr","creationDate","Date","lastEditDate","lastEditAuthor","setTz","tz","zone","clearTz","package","body","getFirstH1Title","statusStr","getHeaderMetadata","ACCEPTED","DRAFT","superseder","trim","publicationDate","dateStr","map","isValid","toDate","tags","tag","deciders","decider","setFile","setTitle","setFirstH1Title","supersedeBy","setHeaderMetadata","markAsSuperseder","superseded","addLinkNoDuplicate","getEnhancedMdx","bodyCopy","clone","deleteFirstH1Title","forEach","metadata","deleteHeaderMetadata","replaceAdrLinks","getRawMarkdown","compare","a","b","aDate","bDate","dateDiff","getTime","aSlugNamePart","bSlugNamePart","reservedFilenames","AdrFile","extension","pathRelativeToCwd","basename","isPathValid","createFromSlugInFolder","folder","join","PackageRef","AdrTemplate","createAdrFromMe","adr","forceUnixPath","p","FilesystemPath","cwdAbsolutePath","isAbsolute","absolutePath","extname","substring","amIaDirectory","dirname","markdownItSourceMap","md","defaultRenderToken","renderer","renderToken","bind","tokens","idx","options","token","type","endsWith","attrPush","toString","markup","level","CheerioMarkdownElement","cheerioElt","startLine","data","parseInt","endLine","cheerioToMarkdown","elt","keepLinks","html","copy","cheerio","load","each","i","linkElt","text","attr","markdownItInstance","MarkdownIt","use","isWindowsLine","line","CheerioMarkdown","$markdown","updateMarkdown","markdown","nbLines","onChange","cb","observers","push","$","render","observer","getLine","lines","replaceText","newText","mdElt","newLine","replaceLine","deleteElement","deleteLines","start","end","splice","insertLineAt","insertLineAfter","is","appendLine","windowsLines","appendToList","ul","newItem","TypeError","htmlentities","str","MarkdownBody","cm","newValue","setAdrLinkResolver","resolver","adrLinkResolver","getFirstH1TitleElement","first","getHeaderMetadataUl","elts","nextUntil","addBack","getHeaderMetadataElementAndMatch","key","regexp","RegExp","result","children","li","match","exec","element","get","res","h1TitleElt","getLinksUl","h2Results","h2","getLinks","addLink","links","l","_","href","isUrlRegexp","promises","mdAdrLink","resolve","params","Promise","all","Package","ref","adrFolderPath","Command","Query","CreateAdrFromTemplateCommand","SupersedeAdrCommand","supersededSlug","supersederSlug","CreateAdrFromTemplateCommandHandler","adrRepository","adrTemplateRepository","execute","command","template","find","save","SupersedeAdrCommandHandler","supersededAdr","supersederAdr","GenerateAdrSlugFromTitleQuery","GetAdrBySlugQuery","SearchAdrsQuery","filters","GenerateAdrSlugFromTitleQueryHandler","query","generateAvailableSlug","GetAdrBySlugQueryHandler","SearchAdrsQueryHandler","findAll","statuses","MarkdownAdrLinkResolver","uri","findFromFile","AdrRepository","config","workdir","packageRepository","git","simpleGit","baseDir","markdownAdrLinkResolver","isGitAvailable","gitAvailable","checkIsRepo","getPackageRef","findInPath","getAdrFolderPath","adrFile","pkg","findByAdrFolderPath","possibleSlug","packages","findAllInPath","flat","sort","getGitMetadata","logs","retry","log","author_name","author_email","getAnonymousAuthor","anonymousAuthor","listConfig","getLastEditDateFromFilesystem","stat","fsP","mtime","f","files","readdir","filename","fsPath","readFile","encoding","then","baseAdrProps","gitMetadata","baseSlug","fs","existsSync","cwd","project","adrFolder","writeFile","AdrTemplateRepository","templatePath","globalTemplate","PackageRepository","packageConfig","buildPackage","projectPath","CommandBus","Map","registerHandler","handler","commandClass","handlersByCommandName","set","dispatch","commandName","QueryBus","queryClass","handlersByQueryName","queryName","FileWatcher","Set","subscribe","add","delete","chokidar","paths","watch","ignoreInitial","disableGlobbing","on","event","filePath","stop","close","lowerCaseFirstLetter","string","charAt","slice","buildContainer","container","createContainer","injectionMode","InjectionMode","PROXY","register","asValue","fileWatcher","asClass","singleton","repositories","Repository","adrCommandHandlers","Handler","commandBus","asFunction","bus","handlerInstance","adrQueryHandlers","queryBus","deepFreezeRecur","obj","keys","isFrozen","deepFreeze","projectPackageSchema","Joi","hostname","required","gitProviders","gitRepositorySchema","url","provider","valid","viewFileUriPattern","projectSchema","items","repository","schema","isGitRemoteConfig","remoteConfig","guessGitRepositoryConfig","existingConfig","gitConfig","parseGitConfig","sync","urlInfo","gitUrlParse","protocol","resource","Log4brainsConfigNotFoundError","configFilename","getDuplicatedValues","objects","countsMap","reduce","counts","buildConfig","joiResult","validate","abortEarly","convert","error","message","duplicatedPackageNames","buildConfigFromWorkdir","workdirAbsolute","configPath","content","readFileSync","yaml","parse","findWorkdirRecursive","cwdAbsolute","parsedPath","dir","root","buildViewUrl","repositoryConfig","adrToDto","viewUrl","supersededBy","rawMarkdown","enhancedMdx","toJSON","Log4brains","searchAdrs","appFilters","adrs","getAdrBySlug","generateAdrSlug","packageName","createAdrFromTemplate","slugObj","supersedeAdr","supersededSlugObj","supersederSlugObj","openAdrInEditor","onImpossibleToGuess","launchEditor","open","create","createFromCwd"],"mappings":"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"}