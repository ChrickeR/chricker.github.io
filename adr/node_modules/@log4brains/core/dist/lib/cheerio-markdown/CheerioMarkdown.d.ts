/// <reference types="cheerio" />
declare type OnChangeObserver = (markdown: string) => void;
export declare class CheerioMarkdown {
    private $markdown;
    $: cheerio.Root;
    private readonly observers;
    constructor($markdown: string);
    get markdown(): string;
    get nbLines(): number;
    onChange(cb: OnChangeObserver): void;
    updateMarkdown(markdown: string): void;
    getLine(i: number): string;
    replaceText(elt: cheerio.Cheerio, newText: string): void;
    deleteElement(elt: cheerio.Cheerio): void;
    replaceLine(i: number, newLine: string): void;
    deleteLines(start: number, end?: number): void;
    insertLineAt(i: number, newLine: string): void;
    insertLineAfter(elt: cheerio.Cheerio, newLine: string): void;
    appendLine(newLine: string): void;
    appendToList(ul: cheerio.Cheerio, newItem: string): void;
}
export {};
//# sourceMappingURL=CheerioMarkdown.d.ts.map