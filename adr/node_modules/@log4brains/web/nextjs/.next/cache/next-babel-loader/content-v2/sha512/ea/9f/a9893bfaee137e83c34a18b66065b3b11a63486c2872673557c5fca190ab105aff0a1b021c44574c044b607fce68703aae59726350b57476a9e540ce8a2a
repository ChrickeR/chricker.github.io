{"ast":null,"code":"import _classCallCheck from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable @typescript-eslint/ban-types */\nimport lunr from \"lunr\";\n\nfunction mapToJson(map) {\n  return Array.from(map.entries());\n}\n\nfunction mapFromJson(entries) {\n  return new Map(entries);\n}\n/**\n * Inspired by https://github.com/squidfunk/mkdocs-material/tree/master/src/assets/javascripts/integrations/search\n */\n\n\nexport var Search = /*#__PURE__*/function () {\n  function Search(index, adrs) {\n    _classCallCheck(this, Search);\n\n    this.index = index;\n    this.adrs = adrs;\n  }\n\n  _createClass(Search, [{\n    key: \"search\",\n    value: function search(query) {\n      var _this = this;\n\n      return this.index.search(\"\".concat(query, \"*\")).map(function (result) {\n        var adr = _this.adrs.get(result.ref);\n\n        if (!adr) {\n          throw new Error(\"Invalid Search instance: missing ADR \\\"\".concat(result.ref, \"\\\"\"));\n        }\n\n        return {\n          slug: result.ref,\n          href: \"/adr/\".concat(result.ref),\n          title: adr.title,\n          score: result.score\n        };\n      });\n    }\n  }, {\n    key: \"serializeIndex\",\n    value: function serializeIndex() {\n      return {\n        lunr: this.index.toJSON(),\n        adrs: mapToJson(this.adrs)\n      };\n    }\n  }], [{\n    key: \"createFromAdrs\",\n    value: function createFromAdrs(adrs) {\n      var adrsForSearch = new Map(adrs.map(function (adr) {\n        return [adr.slug, {\n          title: adr.title || \"Untitled\",\n          verbatim: adr.body.enhancedMdx // TODO: remove tags (https://github.com/thomvaill/log4brains/issues/5)\n\n        }];\n      }));\n      var index = lunr(function (builder) {\n        builder.ref(\"slug\");\n        builder.field(\"title\", {\n          boost: 1000\n        });\n        builder.field(\"verbatim\"); // eslint-disable-next-line no-param-reassign\n\n        builder.metadataWhitelist = [\"position\"];\n        adrsForSearch.forEach(function (adr, slug) {\n          builder.add({\n            slug: slug,\n            title: adr.title,\n            verbatim: adr.verbatim\n          });\n        });\n      });\n      return new Search(index, adrsForSearch);\n    }\n  }, {\n    key: \"createFromSerializedIndex\",\n    value: function createFromSerializedIndex(serializedIndex) {\n      return new Search(lunr.Index.load(serializedIndex.lunr), mapFromJson(serializedIndex.adrs));\n    }\n  }]);\n\n  return Search;\n}();","map":null,"metadata":{},"sourceType":"module"}