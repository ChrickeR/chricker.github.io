{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _Typography from \"@material-ui/core/Typography\";\nimport _SvgIcon from \"@material-ui/core/SvgIcon\";\nimport _defineProperty from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/thomas/git/log4brains/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable @typescript-eslint/ban-types */\nimport React from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useControlled } from \"@material-ui/core/utils\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { GrDocumentText as AdrIcon } from \"react-icons/gr\";\nimport { useRouter } from \"next/router\";\nimport { SearchBar } from \"./components/SearchBar\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    searchBar: {\n      zIndex: \"inherit\"\n    },\n    resultTitle: {\n      marginLeft: \"0.5ch\"\n    },\n    acPaper: {\n      borderRadius: \"0 0 \".concat(theme.shape.borderRadius, \"px \").concat(theme.shape.borderRadius, \"px\"),\n      marginTop: 0\n    }\n  });\n});\nexport function SearchBox(props) {\n  var classes = useStyles();\n\n  var onOpen = props.onOpen,\n      onClose = props.onClose,\n      openProp = props.open,\n      onQueryChange = props.onQueryChange,\n      query = props.query,\n      results = props.results,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      otherProps = _objectWithoutProperties(props, [\"onOpen\", \"onClose\", \"open\", \"onQueryChange\", \"query\", \"results\", \"loading\"]);\n\n  var _useControlled = useControlled({\n    controlled: openProp,\n    \"default\": false,\n    name: \"SearchBox\",\n    state: \"open\"\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      open = _useControlled2[0],\n      setOpenState = _useControlled2[1];\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var router = useRouter();\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var noOptionsText = \"Type to start searching\";\n\n  if (loading) {\n    noOptionsText = /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsx(_CircularProgress, {\n        size: 20\n      })\n    });\n  } else if (query) {\n    noOptionsText = \"No matching documents\";\n  }\n\n  return /*#__PURE__*/_jsx(Autocomplete, _objectSpread(_objectSpread({}, otherProps), {}, {\n    classes: {\n      paper: classes.acPaper\n    },\n    options: results !== null && results !== void 0 ? results : [],\n    getOptionLabel: function getOptionLabel(result) {\n      return result.title;\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/_jsx(SearchBar, _objectSpread(_objectSpread({}, params), {}, {\n        open: open,\n        onClear: function onClear(event) {\n          return onQueryChange && onQueryChange(event, \"\", \"clear\");\n        },\n        className: classes.searchBar\n      }));\n    },\n    inputValue: query,\n    onInputChange: function onInputChange(event, value, reason) {\n      // We don't want to replace the inputValue by the selected value\n      if (reason !== \"reset\" && onQueryChange) {\n        onQueryChange(event, value, reason);\n      }\n    },\n    open: open,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    filterOptions: function filterOptions(r) {\n      return r;\n    } // We hijack Autocomplete's behavior to display search results as options\n    ,\n    renderOption: function renderOption(result) {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(_SvgIcon, {\n          fontSize: \"small\",\n          children: /*#__PURE__*/_jsx(AdrIcon, {})\n        }), /*#__PURE__*/_jsx(_Typography, {\n          className: classes.resultTitle,\n          children: result.title\n        })]\n      });\n    },\n    noOptionsText: noOptionsText,\n    onChange: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, result) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!result) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return router.push(result.href);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}