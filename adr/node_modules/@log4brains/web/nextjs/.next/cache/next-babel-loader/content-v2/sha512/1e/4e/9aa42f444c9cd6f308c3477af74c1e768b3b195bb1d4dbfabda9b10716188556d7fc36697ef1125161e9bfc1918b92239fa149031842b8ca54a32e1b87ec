{"ast":null,"code":"import { getLog4brainsInstance } from \"../../lib/core-api\";\nimport { getConfig } from \"../../lib/next\";\nimport { AdrScene } from \"../../scenes\";\nimport { toAdr } from \"../../lib-shared/types\";\nexport default AdrScene;\nexport const getStaticPaths = async () => {\n  const adrs = await getLog4brainsInstance().searchAdrs();\n  const paths = adrs.map(adr => {\n    return {\n      params: {\n        slug: adr.slug.split(\"/\")\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: process.env.LOG4BRAINS_PHASE === \"initial-build\" ? \"blocking\" : false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const l4bInstance = getLog4brainsInstance();\n\n  if (params === undefined || !params.slug) {\n    return {\n      notFound: true\n    };\n  }\n\n  const currentSlug = params.slug.join(\"/\");\n  const currentAdr = await l4bInstance.getAdrBySlug(currentSlug);\n\n  if (!currentAdr) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      projectName: l4bInstance.config.project.name,\n      currentAdr: toAdr(currentAdr, currentAdr.supersededBy ? await l4bInstance.getAdrBySlug(currentAdr.supersededBy) : undefined),\n      l4bVersion: getConfig().serverRuntimeConfig.VERSION\n    },\n    revalidate: 1\n  };\n};","map":null,"metadata":{},"sourceType":"module"}