{"ast":null,"code":"import _InputBase from \"@material-ui/core/InputBase\";\nimport _Fade from \"@material-ui/core/Fade\";\nimport _IconButton from \"@material-ui/core/IconButton\";\nimport _Close from \"@material-ui/icons/Close\";\nimport _InputAdornment from \"@material-ui/core/InputAdornment\";\nimport _Search from \"@material-ui/icons/Search\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/ban-types */\nimport React from \"react\";\nimport { createStyles, makeStyles, fade } from \"@material-ui/core/styles\";\n// Inspired by https://material-ui.com/components/app-bar/#app-bar-with-search-field\nconst useStyles = makeStyles(theme => {\n  return createStyles({\n    inputRoot: ({\n      open\n    }) => ({\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      borderRadius: open ? `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0` : `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px`,\n      color: open ? theme.palette.getContrastText(theme.palette.common.white) : \"inherit\",\n      backgroundColor: open ? theme.palette.common.white : fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: open ? theme.palette.common.white : fade(theme.palette.common.white, 0.25)\n      }\n    }),\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0)\n    },\n    clearIcon: {\n      color: \"inherit\"\n    }\n  });\n});\nexport function SearchBar(props) {\n  const {\n    InputProps,\n    InputLabelProps,\n    open,\n    onClear\n  } = props,\n        params = _objectWithoutProperties(props, [\"InputProps\", \"InputLabelProps\", \"open\", \"onClear\"]);\n\n  const classes = useStyles(props);\n  return /*#__PURE__*/_jsx(_InputBase, _objectSpread({\n    placeholder: \"Search...\",\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    startAdornment: /*#__PURE__*/_jsx(_InputAdornment, {\n      position: \"start\",\n      children: /*#__PURE__*/_jsx(_Search, {})\n    }),\n    endAdornment:\n    /*#__PURE__*/\n    // eslint-disable-next-line react/destructuring-assignment\n    _jsx(_Fade, {\n      in: open && props.inputProps.value !== \"\",\n      children: /*#__PURE__*/_jsx(_InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsx(_IconButton, {\n          onClick: event => onClear(event),\n          size: \"small\",\n          title: \"Clear\",\n          className: classes.clearIcon,\n          children: /*#__PURE__*/_jsx(_Close, {})\n        })\n      })\n    }),\n    ref: InputProps.ref\n  }, params));\n}","map":null,"metadata":{},"sourceType":"module"}